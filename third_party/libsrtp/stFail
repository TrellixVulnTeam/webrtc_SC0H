; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	D:\Develop\webrtcbuilds-builder\out\src\third_party\libsrtp\srtp\crypto\cipher\aes.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_T0	DD	0a56363c6H
	DD	0847c7cf8H
	DD	0997777eeH
	DD	08d7b7bf6H
	DD	0df2f2ffH
	DD	0bd6b6bd6H
	DD	0b16f6fdeH
	DD	054c5c591H
	DD	050303060H
	DD	03010102H
	DD	0a96767ceH
	DD	07d2b2b56H
	DD	019fefee7H
	DD	062d7d7b5H
	DD	0e6abab4dH
	DD	09a7676ecH
	DD	045caca8fH
	DD	09d82821fH
	DD	040c9c989H
	DD	0877d7dfaH
	DD	015fafaefH
	DD	0eb5959b2H
	DD	0c947478eH
	DD	0bf0f0fbH
	DD	0ecadad41H
	DD	067d4d4b3H
	DD	0fda2a25fH
	DD	0eaafaf45H
	DD	0bf9c9c23H
	DD	0f7a4a453H
	DD	0967272e4H
	DD	05bc0c09bH
	DD	0c2b7b775H
	DD	01cfdfde1H
	DD	0ae93933dH
	DD	06a26264cH
	DD	05a36366cH
	DD	0413f3f7eH
	DD	02f7f7f5H
	DD	04fcccc83H
	DD	05c343468H
	DD	0f4a5a551H
	DD	034e5e5d1H
	DD	08f1f1f9H
	DD	0937171e2H
	DD	073d8d8abH
	DD	053313162H
	DD	03f15152aH
	DD	0c040408H
	DD	052c7c795H
	DD	065232346H
	DD	05ec3c39dH
	DD	028181830H
	DD	0a1969637H
	DD	0f05050aH
	DD	0b59a9a2fH
	DD	0907070eH
	DD	036121224H
	DD	09b80801bH
	DD	03de2e2dfH
	DD	026ebebcdH
	DD	06927274eH
	DD	0cdb2b27fH
	DD	09f7575eaH
	DD	01b090912H
	DD	09e83831dH
	DD	0742c2c58H
	DD	02e1a1a34H
	DD	02d1b1b36H
	DD	0b26e6edcH
	DD	0ee5a5ab4H
	DD	0fba0a05bH
	DD	0f65252a4H
	DD	04d3b3b76H
	DD	061d6d6b7H
	DD	0ceb3b37dH
	DD	07b292952H
	DD	03ee3e3ddH
	DD	0712f2f5eH
	DD	097848413H
	DD	0f55353a6H
	DD	068d1d1b9H
	DD	00H
	DD	02cededc1H
	DD	060202040H
	DD	01ffcfce3H
	DD	0c8b1b179H
	DD	0ed5b5bb6H
	DD	0be6a6ad4H
	DD	046cbcb8dH
	DD	0d9bebe67H
	DD	04b393972H
	DD	0de4a4a94H
	DD	0d44c4c98H
	DD	0e85858b0H
	DD	04acfcf85H
	DD	06bd0d0bbH
	DD	02aefefc5H
	DD	0e5aaaa4fH
	DD	016fbfbedH
	DD	0c5434386H
	DD	0d74d4d9aH
	DD	055333366H
	DD	094858511H
	DD	0cf45458aH
	DD	010f9f9e9H
	DD	06020204H
	DD	0817f7ffeH
	DD	0f05050a0H
	DD	0443c3c78H
	DD	0ba9f9f25H
	DD	0e3a8a84bH
	DD	0f35151a2H
	DD	0fea3a35dH
	DD	0c0404080H
	DD	08a8f8f05H
	DD	0ad92923fH
	DD	0bc9d9d21H
	DD	048383870H
	DD	04f5f5f1H
	DD	0dfbcbc63H
	DD	0c1b6b677H
	DD	075dadaafH
	DD	063212142H
	DD	030101020H
	DD	01affffe5H
	DD	0ef3f3fdH
	DD	06dd2d2bfH
	DD	04ccdcd81H
	DD	0140c0c18H
	DD	035131326H
	DD	02fececc3H
	DD	0e15f5fbeH
	DD	0a2979735H
	DD	0cc444488H
	DD	03917172eH
	DD	057c4c493H
	DD	0f2a7a755H
	DD	0827e7efcH
	DD	0473d3d7aH
	DD	0ac6464c8H
	DD	0e75d5dbaH
	DD	02b191932H
	DD	0957373e6H
	DD	0a06060c0H
	DD	098818119H
	DD	0d14f4f9eH
	DD	07fdcdca3H
	DD	066222244H
	DD	07e2a2a54H
	DD	0ab90903bH
	DD	08388880bH
	DD	0ca46468cH
	DD	029eeeec7H
	DD	0d3b8b86bH
	DD	03c141428H
	DD	079dedea7H
	DD	0e25e5ebcH
	DD	01d0b0b16H
	DD	076dbdbadH
	DD	03be0e0dbH
	DD	056323264H
	DD	04e3a3a74H
	DD	01e0a0a14H
	DD	0db494992H
	DD	0a06060cH
	DD	06c242448H
	DD	0e45c5cb8H
	DD	05dc2c29fH
	DD	06ed3d3bdH
	DD	0efacac43H
	DD	0a66262c4H
	DD	0a8919139H
	DD	0a4959531H
	DD	037e4e4d3H
	DD	08b7979f2H
	DD	032e7e7d5H
	DD	043c8c88bH
	DD	05937376eH
	DD	0b76d6ddaH
	DD	08c8d8d01H
	DD	064d5d5b1H
	DD	0d24e4e9cH
	DD	0e0a9a949H
	DD	0b46c6cd8H
	DD	0fa5656acH
	DD	07f4f4f3H
	DD	025eaeacfH
	DD	0af6565caH
	DD	08e7a7af4H
	DD	0e9aeae47H
	DD	018080810H
	DD	0d5baba6fH
	DD	0887878f0H
	DD	06f25254aH
	DD	0722e2e5cH
	DD	0241c1c38H
	DD	0f1a6a657H
	DD	0c7b4b473H
	DD	051c6c697H
	DD	023e8e8cbH
	DD	07cdddda1H
	DD	09c7474e8H
	DD	0211f1f3eH
	DD	0dd4b4b96H
	DD	0dcbdbd61H
	DD	0868b8b0dH
	DD	0858a8a0fH
	DD	0907070e0H
	DD	0423e3e7cH
	DD	0c4b5b571H
	DD	0aa6666ccH
	DD	0d8484890H
	DD	05030306H
	DD	01f6f6f7H
	DD	0120e0e1cH
	DD	0a36161c2H
	DD	05f35356aH
	DD	0f95757aeH
	DD	0d0b9b969H
	DD	091868617H
	DD	058c1c199H
	DD	0271d1d3aH
	DD	0b99e9e27H
	DD	038e1e1d9H
	DD	013f8f8ebH
	DD	0b398982bH
	DD	033111122H
	DD	0bb6969d2H
	DD	070d9d9a9H
	DD	0898e8e07H
	DD	0a7949433H
	DD	0b69b9b2dH
	DD	0221e1e3cH
	DD	092878715H
	DD	020e9e9c9H
	DD	049cece87H
	DD	0ff5555aaH
	DD	078282850H
	DD	07adfdfa5H
	DD	08f8c8c03H
	DD	0f8a1a159H
	DD	080898909H
	DD	0170d0d1aH
	DD	0dabfbf65H
	DD	031e6e6d7H
	DD	0c6424284H
	DD	0b86868d0H
	DD	0c3414182H
	DD	0b0999929H
	DD	0772d2d5aH
	DD	0110f0f1eH
	DD	0cbb0b07bH
	DD	0fc5454a8H
	DD	0d6bbbb6dH
	DD	03a16162cH
_T1	DD	06363c6a5H
	DD	07c7cf884H
	DD	07777ee99H
	DD	07b7bf68dH
	DD	0f2f2ff0dH
	DD	06b6bd6bdH
	DD	06f6fdeb1H
	DD	0c5c59154H
	DD	030306050H
	DD	01010203H
	DD	06767cea9H
	DD	02b2b567dH
	DD	0fefee719H
	DD	0d7d7b562H
	DD	0abab4de6H
	DD	07676ec9aH
	DD	0caca8f45H
	DD	082821f9dH
	DD	0c9c98940H
	DD	07d7dfa87H
	DD	0fafaef15H
	DD	05959b2ebH
	DD	047478ec9H
	DD	0f0f0fb0bH
	DD	0adad41ecH
	DD	0d4d4b367H
	DD	0a2a25ffdH
	DD	0afaf45eaH
	DD	09c9c23bfH
	DD	0a4a453f7H
	DD	07272e496H
	DD	0c0c09b5bH
	DD	0b7b775c2H
	DD	0fdfde11cH
	DD	093933daeH
	DD	026264c6aH
	DD	036366c5aH
	DD	03f3f7e41H
	DD	0f7f7f502H
	DD	0cccc834fH
	DD	03434685cH
	DD	0a5a551f4H
	DD	0e5e5d134H
	DD	0f1f1f908H
	DD	07171e293H
	DD	0d8d8ab73H
	DD	031316253H
	DD	015152a3fH
	DD	0404080cH
	DD	0c7c79552H
	DD	023234665H
	DD	0c3c39d5eH
	DD	018183028H
	DD	0969637a1H
	DD	05050a0fH
	DD	09a9a2fb5H
	DD	07070e09H
	DD	012122436H
	DD	080801b9bH
	DD	0e2e2df3dH
	DD	0ebebcd26H
	DD	027274e69H
	DD	0b2b27fcdH
	DD	07575ea9fH
	DD	0909121bH
	DD	083831d9eH
	DD	02c2c5874H
	DD	01a1a342eH
	DD	01b1b362dH
	DD	06e6edcb2H
	DD	05a5ab4eeH
	DD	0a0a05bfbH
	DD	05252a4f6H
	DD	03b3b764dH
	DD	0d6d6b761H
	DD	0b3b37dceH
	DD	02929527bH
	DD	0e3e3dd3eH
	DD	02f2f5e71H
	DD	084841397H
	DD	05353a6f5H
	DD	0d1d1b968H
	DD	00H
	DD	0ededc12cH
	DD	020204060H
	DD	0fcfce31fH
	DD	0b1b179c8H
	DD	05b5bb6edH
	DD	06a6ad4beH
	DD	0cbcb8d46H
	DD	0bebe67d9H
	DD	03939724bH
	DD	04a4a94deH
	DD	04c4c98d4H
	DD	05858b0e8H
	DD	0cfcf854aH
	DD	0d0d0bb6bH
	DD	0efefc52aH
	DD	0aaaa4fe5H
	DD	0fbfbed16H
	DD	0434386c5H
	DD	04d4d9ad7H
	DD	033336655H
	DD	085851194H
	DD	045458acfH
	DD	0f9f9e910H
	DD	02020406H
	DD	07f7ffe81H
	DD	05050a0f0H
	DD	03c3c7844H
	DD	09f9f25baH
	DD	0a8a84be3H
	DD	05151a2f3H
	DD	0a3a35dfeH
	DD	0404080c0H
	DD	08f8f058aH
	DD	092923fadH
	DD	09d9d21bcH
	DD	038387048H
	DD	0f5f5f104H
	DD	0bcbc63dfH
	DD	0b6b677c1H
	DD	0dadaaf75H
	DD	021214263H
	DD	010102030H
	DD	0ffffe51aH
	DD	0f3f3fd0eH
	DD	0d2d2bf6dH
	DD	0cdcd814cH
	DD	0c0c1814H
	DD	013132635H
	DD	0ececc32fH
	DD	05f5fbee1H
	DD	0979735a2H
	DD	0444488ccH
	DD	017172e39H
	DD	0c4c49357H
	DD	0a7a755f2H
	DD	07e7efc82H
	DD	03d3d7a47H
	DD	06464c8acH
	DD	05d5dbae7H
	DD	01919322bH
	DD	07373e695H
	DD	06060c0a0H
	DD	081811998H
	DD	04f4f9ed1H
	DD	0dcdca37fH
	DD	022224466H
	DD	02a2a547eH
	DD	090903babH
	DD	088880b83H
	DD	046468ccaH
	DD	0eeeec729H
	DD	0b8b86bd3H
	DD	01414283cH
	DD	0dedea779H
	DD	05e5ebce2H
	DD	0b0b161dH
	DD	0dbdbad76H
	DD	0e0e0db3bH
	DD	032326456H
	DD	03a3a744eH
	DD	0a0a141eH
	DD	0494992dbH
	DD	06060c0aH
	DD	02424486cH
	DD	05c5cb8e4H
	DD	0c2c29f5dH
	DD	0d3d3bd6eH
	DD	0acac43efH
	DD	06262c4a6H
	DD	0919139a8H
	DD	0959531a4H
	DD	0e4e4d337H
	DD	07979f28bH
	DD	0e7e7d532H
	DD	0c8c88b43H
	DD	037376e59H
	DD	06d6ddab7H
	DD	08d8d018cH
	DD	0d5d5b164H
	DD	04e4e9cd2H
	DD	0a9a949e0H
	DD	06c6cd8b4H
	DD	05656acfaH
	DD	0f4f4f307H
	DD	0eaeacf25H
	DD	06565caafH
	DD	07a7af48eH
	DD	0aeae47e9H
	DD	08081018H
	DD	0baba6fd5H
	DD	07878f088H
	DD	025254a6fH
	DD	02e2e5c72H
	DD	01c1c3824H
	DD	0a6a657f1H
	DD	0b4b473c7H
	DD	0c6c69751H
	DD	0e8e8cb23H
	DD	0dddda17cH
	DD	07474e89cH
	DD	01f1f3e21H
	DD	04b4b96ddH
	DD	0bdbd61dcH
	DD	08b8b0d86H
	DD	08a8a0f85H
	DD	07070e090H
	DD	03e3e7c42H
	DD	0b5b571c4H
	DD	06666ccaaH
	DD	0484890d8H
	DD	03030605H
	DD	0f6f6f701H
	DD	0e0e1c12H
	DD	06161c2a3H
	DD	035356a5fH
	DD	05757aef9H
	DD	0b9b969d0H
	DD	086861791H
	DD	0c1c19958H
	DD	01d1d3a27H
	DD	09e9e27b9H
	DD	0e1e1d938H
	DD	0f8f8eb13H
	DD	098982bb3H
	DD	011112233H
	DD	06969d2bbH
	DD	0d9d9a970H
	DD	08e8e0789H
	DD	0949433a7H
	DD	09b9b2db6H
	DD	01e1e3c22H
	DD	087871592H
	DD	0e9e9c920H
	DD	0cece8749H
	DD	05555aaffH
	DD	028285078H
	DD	0dfdfa57aH
	DD	08c8c038fH
	DD	0a1a159f8H
	DD	089890980H
	DD	0d0d1a17H
	DD	0bfbf65daH
	DD	0e6e6d731H
	DD	0424284c6H
	DD	06868d0b8H
	DD	0414182c3H
	DD	0999929b0H
	DD	02d2d5a77H
	DD	0f0f1e11H
	DD	0b0b07bcbH
	DD	05454a8fcH
	DD	0bbbb6dd6H
	DD	016162c3aH
_T2	DD	063c6a563H
	DD	07cf8847cH
	DD	077ee9977H
	DD	07bf68d7bH
	DD	0f2ff0df2H
	DD	06bd6bd6bH
	DD	06fdeb16fH
	DD	0c59154c5H
	DD	030605030H
	DD	01020301H
	DD	067cea967H
	DD	02b567d2bH
	DD	0fee719feH
	DD	0d7b562d7H
	DD	0ab4de6abH
	DD	076ec9a76H
	DD	0ca8f45caH
	DD	0821f9d82H
	DD	0c98940c9H
	DD	07dfa877dH
	DD	0faef15faH
	DD	059b2eb59H
	DD	0478ec947H
	DD	0f0fb0bf0H
	DD	0ad41ecadH
	DD	0d4b367d4H
	DD	0a25ffda2H
	DD	0af45eaafH
	DD	09c23bf9cH
	DD	0a453f7a4H
	DD	072e49672H
	DD	0c09b5bc0H
	DD	0b775c2b7H
	DD	0fde11cfdH
	DD	0933dae93H
	DD	0264c6a26H
	DD	0366c5a36H
	DD	03f7e413fH
	DD	0f7f502f7H
	DD	0cc834fccH
	DD	034685c34H
	DD	0a551f4a5H
	DD	0e5d134e5H
	DD	0f1f908f1H
	DD	071e29371H
	DD	0d8ab73d8H
	DD	031625331H
	DD	0152a3f15H
	DD	04080c04H
	DD	0c79552c7H
	DD	023466523H
	DD	0c39d5ec3H
	DD	018302818H
	DD	09637a196H
	DD	050a0f05H
	DD	09a2fb59aH
	DD	070e0907H
	DD	012243612H
	DD	0801b9b80H
	DD	0e2df3de2H
	DD	0ebcd26ebH
	DD	0274e6927H
	DD	0b27fcdb2H
	DD	075ea9f75H
	DD	09121b09H
	DD	0831d9e83H
	DD	02c58742cH
	DD	01a342e1aH
	DD	01b362d1bH
	DD	06edcb26eH
	DD	05ab4ee5aH
	DD	0a05bfba0H
	DD	052a4f652H
	DD	03b764d3bH
	DD	0d6b761d6H
	DD	0b37dceb3H
	DD	029527b29H
	DD	0e3dd3ee3H
	DD	02f5e712fH
	DD	084139784H
	DD	053a6f553H
	DD	0d1b968d1H
	DD	00H
	DD	0edc12cedH
	DD	020406020H
	DD	0fce31ffcH
	DD	0b179c8b1H
	DD	05bb6ed5bH
	DD	06ad4be6aH
	DD	0cb8d46cbH
	DD	0be67d9beH
	DD	039724b39H
	DD	04a94de4aH
	DD	04c98d44cH
	DD	058b0e858H
	DD	0cf854acfH
	DD	0d0bb6bd0H
	DD	0efc52aefH
	DD	0aa4fe5aaH
	DD	0fbed16fbH
	DD	04386c543H
	DD	04d9ad74dH
	DD	033665533H
	DD	085119485H
	DD	0458acf45H
	DD	0f9e910f9H
	DD	02040602H
	DD	07ffe817fH
	DD	050a0f050H
	DD	03c78443cH
	DD	09f25ba9fH
	DD	0a84be3a8H
	DD	051a2f351H
	DD	0a35dfea3H
	DD	04080c040H
	DD	08f058a8fH
	DD	0923fad92H
	DD	09d21bc9dH
	DD	038704838H
	DD	0f5f104f5H
	DD	0bc63dfbcH
	DD	0b677c1b6H
	DD	0daaf75daH
	DD	021426321H
	DD	010203010H
	DD	0ffe51affH
	DD	0f3fd0ef3H
	DD	0d2bf6dd2H
	DD	0cd814ccdH
	DD	0c18140cH
	DD	013263513H
	DD	0ecc32fecH
	DD	05fbee15fH
	DD	09735a297H
	DD	04488cc44H
	DD	0172e3917H
	DD	0c49357c4H
	DD	0a755f2a7H
	DD	07efc827eH
	DD	03d7a473dH
	DD	064c8ac64H
	DD	05dbae75dH
	DD	019322b19H
	DD	073e69573H
	DD	060c0a060H
	DD	081199881H
	DD	04f9ed14fH
	DD	0dca37fdcH
	DD	022446622H
	DD	02a547e2aH
	DD	0903bab90H
	DD	0880b8388H
	DD	0468cca46H
	DD	0eec729eeH
	DD	0b86bd3b8H
	DD	014283c14H
	DD	0dea779deH
	DD	05ebce25eH
	DD	0b161d0bH
	DD	0dbad76dbH
	DD	0e0db3be0H
	DD	032645632H
	DD	03a744e3aH
	DD	0a141e0aH
	DD	04992db49H
	DD	060c0a06H
	DD	024486c24H
	DD	05cb8e45cH
	DD	0c29f5dc2H
	DD	0d3bd6ed3H
	DD	0ac43efacH
	DD	062c4a662H
	DD	09139a891H
	DD	09531a495H
	DD	0e4d337e4H
	DD	079f28b79H
	DD	0e7d532e7H
	DD	0c88b43c8H
	DD	0376e5937H
	DD	06ddab76dH
	DD	08d018c8dH
	DD	0d5b164d5H
	DD	04e9cd24eH
	DD	0a949e0a9H
	DD	06cd8b46cH
	DD	056acfa56H
	DD	0f4f307f4H
	DD	0eacf25eaH
	DD	065caaf65H
	DD	07af48e7aH
	DD	0ae47e9aeH
	DD	08101808H
	DD	0ba6fd5baH
	DD	078f08878H
	DD	0254a6f25H
	DD	02e5c722eH
	DD	01c38241cH
	DD	0a657f1a6H
	DD	0b473c7b4H
	DD	0c69751c6H
	DD	0e8cb23e8H
	DD	0dda17cddH
	DD	074e89c74H
	DD	01f3e211fH
	DD	04b96dd4bH
	DD	0bd61dcbdH
	DD	08b0d868bH
	DD	08a0f858aH
	DD	070e09070H
	DD	03e7c423eH
	DD	0b571c4b5H
	DD	066ccaa66H
	DD	04890d848H
	DD	03060503H
	DD	0f6f701f6H
	DD	0e1c120eH
	DD	061c2a361H
	DD	0356a5f35H
	DD	057aef957H
	DD	0b969d0b9H
	DD	086179186H
	DD	0c19958c1H
	DD	01d3a271dH
	DD	09e27b99eH
	DD	0e1d938e1H
	DD	0f8eb13f8H
	DD	0982bb398H
	DD	011223311H
	DD	069d2bb69H
	DD	0d9a970d9H
	DD	08e07898eH
	DD	09433a794H
	DD	09b2db69bH
	DD	01e3c221eH
	DD	087159287H
	DD	0e9c920e9H
	DD	0ce8749ceH
	DD	055aaff55H
	DD	028507828H
	DD	0dfa57adfH
	DD	08c038f8cH
	DD	0a159f8a1H
	DD	089098089H
	DD	0d1a170dH
	DD	0bf65dabfH
	DD	0e6d731e6H
	DD	04284c642H
	DD	068d0b868H
	DD	04182c341H
	DD	09929b099H
	DD	02d5a772dH
	DD	0f1e110fH
	DD	0b07bcbb0H
	DD	054a8fc54H
	DD	0bb6dd6bbH
	DD	0162c3a16H
_T3	DD	0c6a56363H
	DD	0f8847c7cH
	DD	0ee997777H
	DD	0f68d7b7bH
	DD	0ff0df2f2H
	DD	0d6bd6b6bH
	DD	0deb16f6fH
	DD	09154c5c5H
	DD	060503030H
	DD	02030101H
	DD	0cea96767H
	DD	0567d2b2bH
	DD	0e719fefeH
	DD	0b562d7d7H
	DD	04de6ababH
	DD	0ec9a7676H
	DD	08f45cacaH
	DD	01f9d8282H
	DD	08940c9c9H
	DD	0fa877d7dH
	DD	0ef15fafaH
	DD	0b2eb5959H
	DD	08ec94747H
	DD	0fb0bf0f0H
	DD	041ecadadH
	DD	0b367d4d4H
	DD	05ffda2a2H
	DD	045eaafafH
	DD	023bf9c9cH
	DD	053f7a4a4H
	DD	0e4967272H
	DD	09b5bc0c0H
	DD	075c2b7b7H
	DD	0e11cfdfdH
	DD	03dae9393H
	DD	04c6a2626H
	DD	06c5a3636H
	DD	07e413f3fH
	DD	0f502f7f7H
	DD	0834fccccH
	DD	0685c3434H
	DD	051f4a5a5H
	DD	0d134e5e5H
	DD	0f908f1f1H
	DD	0e2937171H
	DD	0ab73d8d8H
	DD	062533131H
	DD	02a3f1515H
	DD	080c0404H
	DD	09552c7c7H
	DD	046652323H
	DD	09d5ec3c3H
	DD	030281818H
	DD	037a19696H
	DD	0a0f0505H
	DD	02fb59a9aH
	DD	0e090707H
	DD	024361212H
	DD	01b9b8080H
	DD	0df3de2e2H
	DD	0cd26ebebH
	DD	04e692727H
	DD	07fcdb2b2H
	DD	0ea9f7575H
	DD	0121b0909H
	DD	01d9e8383H
	DD	058742c2cH
	DD	0342e1a1aH
	DD	0362d1b1bH
	DD	0dcb26e6eH
	DD	0b4ee5a5aH
	DD	05bfba0a0H
	DD	0a4f65252H
	DD	0764d3b3bH
	DD	0b761d6d6H
	DD	07dceb3b3H
	DD	0527b2929H
	DD	0dd3ee3e3H
	DD	05e712f2fH
	DD	013978484H
	DD	0a6f55353H
	DD	0b968d1d1H
	DD	00H
	DD	0c12cededH
	DD	040602020H
	DD	0e31ffcfcH
	DD	079c8b1b1H
	DD	0b6ed5b5bH
	DD	0d4be6a6aH
	DD	08d46cbcbH
	DD	067d9bebeH
	DD	0724b3939H
	DD	094de4a4aH
	DD	098d44c4cH
	DD	0b0e85858H
	DD	0854acfcfH
	DD	0bb6bd0d0H
	DD	0c52aefefH
	DD	04fe5aaaaH
	DD	0ed16fbfbH
	DD	086c54343H
	DD	09ad74d4dH
	DD	066553333H
	DD	011948585H
	DD	08acf4545H
	DD	0e910f9f9H
	DD	04060202H
	DD	0fe817f7fH
	DD	0a0f05050H
	DD	078443c3cH
	DD	025ba9f9fH
	DD	04be3a8a8H
	DD	0a2f35151H
	DD	05dfea3a3H
	DD	080c04040H
	DD	058a8f8fH
	DD	03fad9292H
	DD	021bc9d9dH
	DD	070483838H
	DD	0f104f5f5H
	DD	063dfbcbcH
	DD	077c1b6b6H
	DD	0af75dadaH
	DD	042632121H
	DD	020301010H
	DD	0e51affffH
	DD	0fd0ef3f3H
	DD	0bf6dd2d2H
	DD	0814ccdcdH
	DD	018140c0cH
	DD	026351313H
	DD	0c32fececH
	DD	0bee15f5fH
	DD	035a29797H
	DD	088cc4444H
	DD	02e391717H
	DD	09357c4c4H
	DD	055f2a7a7H
	DD	0fc827e7eH
	DD	07a473d3dH
	DD	0c8ac6464H
	DD	0bae75d5dH
	DD	0322b1919H
	DD	0e6957373H
	DD	0c0a06060H
	DD	019988181H
	DD	09ed14f4fH
	DD	0a37fdcdcH
	DD	044662222H
	DD	0547e2a2aH
	DD	03bab9090H
	DD	0b838888H
	DD	08cca4646H
	DD	0c729eeeeH
	DD	06bd3b8b8H
	DD	0283c1414H
	DD	0a779dedeH
	DD	0bce25e5eH
	DD	0161d0b0bH
	DD	0ad76dbdbH
	DD	0db3be0e0H
	DD	064563232H
	DD	0744e3a3aH
	DD	0141e0a0aH
	DD	092db4949H
	DD	0c0a0606H
	DD	0486c2424H
	DD	0b8e45c5cH
	DD	09f5dc2c2H
	DD	0bd6ed3d3H
	DD	043efacacH
	DD	0c4a66262H
	DD	039a89191H
	DD	031a49595H
	DD	0d337e4e4H
	DD	0f28b7979H
	DD	0d532e7e7H
	DD	08b43c8c8H
	DD	06e593737H
	DD	0dab76d6dH
	DD	018c8d8dH
	DD	0b164d5d5H
	DD	09cd24e4eH
	DD	049e0a9a9H
	DD	0d8b46c6cH
	DD	0acfa5656H
	DD	0f307f4f4H
	DD	0cf25eaeaH
	DD	0caaf6565H
	DD	0f48e7a7aH
	DD	047e9aeaeH
	DD	010180808H
	DD	06fd5babaH
	DD	0f0887878H
	DD	04a6f2525H
	DD	05c722e2eH
	DD	038241c1cH
	DD	057f1a6a6H
	DD	073c7b4b4H
	DD	09751c6c6H
	DD	0cb23e8e8H
	DD	0a17cddddH
	DD	0e89c7474H
	DD	03e211f1fH
	DD	096dd4b4bH
	DD	061dcbdbdH
	DD	0d868b8bH
	DD	0f858a8aH
	DD	0e0907070H
	DD	07c423e3eH
	DD	071c4b5b5H
	DD	0ccaa6666H
	DD	090d84848H
	DD	06050303H
	DD	0f701f6f6H
	DD	01c120e0eH
	DD	0c2a36161H
	DD	06a5f3535H
	DD	0aef95757H
	DD	069d0b9b9H
	DD	017918686H
	DD	09958c1c1H
	DD	03a271d1dH
	DD	027b99e9eH
	DD	0d938e1e1H
	DD	0eb13f8f8H
	DD	02bb39898H
	DD	022331111H
	DD	0d2bb6969H
	DD	0a970d9d9H
	DD	07898e8eH
	DD	033a79494H
	DD	02db69b9bH
	DD	03c221e1eH
	DD	015928787H
	DD	0c920e9e9H
	DD	08749ceceH
	DD	0aaff5555H
	DD	050782828H
	DD	0a57adfdfH
	DD	038f8c8cH
	DD	059f8a1a1H
	DD	09808989H
	DD	01a170d0dH
	DD	065dabfbfH
	DD	0d731e6e6H
	DD	084c64242H
	DD	0d0b86868H
	DD	082c34141H
	DD	029b09999H
	DD	05a772d2dH
	DD	01e110f0fH
	DD	07bcbb0b0H
	DD	0a8fc5454H
	DD	06dd6bbbbH
	DD	02c3a1616H
_U0	DD	050a7f451H
	DD	05365417eH
	DD	0c3a4171aH
	DD	0965e273aH
	DD	0cb6bab3bH
	DD	0f1459d1fH
	DD	0ab58faacH
	DD	09303e34bH
	DD	055fa3020H
	DD	0f66d76adH
	DD	09176cc88H
	DD	0254c02f5H
	DD	0fcd7e54fH
	DD	0d7cb2ac5H
	DD	080443526H
	DD	08fa362b5H
	DD	0495ab1deH
	DD	0671bba25H
	DD	0980eea45H
	DD	0e1c0fe5dH
	DD	02752fc3H
	DD	012f04c81H
	DD	0a397468dH
	DD	0c6f9d36bH
	DD	0e75f8f03H
	DD	0959c9215H
	DD	0eb7a6dbfH
	DD	0da595295H
	DD	02d83bed4H
	DD	0d3217458H
	DD	02969e049H
	DD	044c8c98eH
	DD	06a89c275H
	DD	078798ef4H
	DD	06b3e5899H
	DD	0dd71b927H
	DD	0b64fe1beH
	DD	017ad88f0H
	DD	066ac20c9H
	DD	0b43ace7dH
	DD	0184adf63H
	DD	082311ae5H
	DD	060335197H
	DD	0457f5362H
	DD	0e07764b1H
	DD	084ae6bbbH
	DD	01ca081feH
	DD	0942b08f9H
	DD	058684870H
	DD	019fd458fH
	DD	0876cde94H
	DD	0b7f87b52H
	DD	023d373abH
	DD	0e2024b72H
	DD	0578f1fe3H
	DD	02aab5566H
	DD	0728ebb2H
	DD	03c2b52fH
	DD	09a7bc586H
	DD	0a50837d3H
	DD	0f2872830H
	DD	0b2a5bf23H
	DD	0ba6a0302H
	DD	05c8216edH
	DD	02b1ccf8aH
	DD	092b479a7H
	DD	0f0f207f3H
	DD	0a1e2694eH
	DD	0cdf4da65H
	DD	0d5be0506H
	DD	01f6234d1H
	DD	08afea6c4H
	DD	09d532e34H
	DD	0a055f3a2H
	DD	032e18a05H
	DD	075ebf6a4H
	DD	039ec830bH
	DD	0aaef6040H
	DD	069f715eH
	DD	051106ebdH
	DD	0f98a213eH
	DD	03d06dd96H
	DD	0ae053eddH
	DD	046bde64dH
	DD	0b58d5491H
	DD	055dc471H
	DD	06fd40604H
	DD	0ff155060H
	DD	024fb9819H
	DD	097e9bdd6H
	DD	0cc434089H
	DD	0779ed967H
	DD	0bd42e8b0H
	DD	0888b8907H
	DD	0385b19e7H
	DD	0dbeec879H
	DD	0470a7ca1H
	DD	0e90f427cH
	DD	0c91e84f8H
	DD	00H
	DD	083868009H
	DD	048ed2b32H
	DD	0ac70111eH
	DD	04e725a6cH
	DD	0fbff0efdH
	DD	05638850fH
	DD	01ed5ae3dH
	DD	027392d36H
	DD	064d90f0aH
	DD	021a65c68H
	DD	0d1545b9bH
	DD	03a2e3624H
	DD	0b1670a0cH
	DD	0fe75793H
	DD	0d296eeb4H
	DD	09e919b1bH
	DD	04fc5c080H
	DD	0a220dc61H
	DD	0694b775aH
	DD	0161a121cH
	DD	0aba93e2H
	DD	0e52aa0c0H
	DD	043e0223cH
	DD	01d171b12H
	DD	0b0d090eH
	DD	0adc78bf2H
	DD	0b9a8b62dH
	DD	0c8a91e14H
	DD	08519f157H
	DD	04c0775afH
	DD	0bbdd99eeH
	DD	0fd607fa3H
	DD	09f2601f7H
	DD	0bcf5725cH
	DD	0c53b6644H
	DD	0347efb5bH
	DD	07629438bH
	DD	0dcc623cbH
	DD	068fcedb6H
	DD	063f1e4b8H
	DD	0cadc31d7H
	DD	010856342H
	DD	040229713H
	DD	02011c684H
	DD	07d244a85H
	DD	0f83dbbd2H
	DD	01132f9aeH
	DD	06da129c7H
	DD	04b2f9e1dH
	DD	0f330b2dcH
	DD	0ec52860dH
	DD	0d0e3c177H
	DD	06c16b32bH
	DD	099b970a9H
	DD	0fa489411H
	DD	02264e947H
	DD	0c48cfca8H
	DD	01a3ff0a0H
	DD	0d82c7d56H
	DD	0ef903322H
	DD	0c74e4987H
	DD	0c1d138d9H
	DD	0fea2ca8cH
	DD	0360bd498H
	DD	0cf81f5a6H
	DD	028de7aa5H
	DD	0268eb7daH
	DD	0a4bfad3fH
	DD	0e49d3a2cH
	DD	0d927850H
	DD	09bcc5f6aH
	DD	062467e54H
	DD	0c2138df6H
	DD	0e8b8d890H
	DD	05ef7392eH
	DD	0f5afc382H
	DD	0be805d9fH
	DD	07c93d069H
	DD	0a92dd56fH
	DD	0b31225cfH
	DD	03b99acc8H
	DD	0a77d1810H
	DD	06e639ce8H
	DD	07bbb3bdbH
	DD	097826cdH
	DD	0f418596eH
	DD	01b79aecH
	DD	0a89a4f83H
	DD	0656e95e6H
	DD	07ee6ffaaH
	DD	08cfbc21H
	DD	0e6e815efH
	DD	0d99be7baH
	DD	0ce366f4aH
	DD	0d4099feaH
	DD	0d67cb029H
	DD	0afb2a431H
	DD	031233f2aH
	DD	03094a5c6H
	DD	0c066a235H
	DD	037bc4e74H
	DD	0a6ca82fcH
	DD	0b0d090e0H
	DD	015d8a733H
	DD	04a9804f1H
	DD	0f7daec41H
	DD	0e50cd7fH
	DD	02ff69117H
	DD	08dd64d76H
	DD	04db0ef43H
	DD	0544daaccH
	DD	0df0496e4H
	DD	0e3b5d19eH
	DD	01b886a4cH
	DD	0b81f2cc1H
	DD	07f516546H
	DD	04ea5e9dH
	DD	05d358c01H
	DD	0737487faH
	DD	02e410bfbH
	DD	05a1d67b3H
	DD	052d2db92H
	DD	0335610e9H
	DD	01347d66dH
	DD	08c61d79aH
	DD	07a0ca137H
	DD	08e14f859H
	DD	0893c13ebH
	DD	0ee27a9ceH
	DD	035c961b7H
	DD	0ede51ce1H
	DD	03cb1477aH
	DD	059dfd29cH
	DD	03f73f255H
	DD	079ce1418H
	DD	0bf37c773H
	DD	0eacdf753H
	DD	05baafd5fH
	DD	0146f3ddfH
	DD	086db4478H
	DD	081f3afcaH
	DD	03ec468b9H
	DD	02c342438H
	DD	05f40a3c2H
	DD	072c31d16H
	DD	0c25e2bcH
	DD	08b493c28H
	DD	041950dffH
	DD	07101a839H
	DD	0deb30c08H
	DD	09ce4b4d8H
	DD	090c15664H
	DD	06184cb7bH
	DD	070b632d5H
	DD	0745c6c48H
	DD	04257b8d0H
_U1	DD	0a7f45150H
	DD	065417e53H
	DD	0a4171ac3H
	DD	05e273a96H
	DD	06bab3bcbH
	DD	0459d1ff1H
	DD	058faacabH
	DD	03e34b93H
	DD	0fa302055H
	DD	06d76adf6H
	DD	076cc8891H
	DD	04c02f525H
	DD	0d7e54ffcH
	DD	0cb2ac5d7H
	DD	044352680H
	DD	0a362b58fH
	DD	05ab1de49H
	DD	01bba2567H
	DD	0eea4598H
	DD	0c0fe5de1H
	DD	0752fc302H
	DD	0f04c8112H
	DD	097468da3H
	DD	0f9d36bc6H
	DD	05f8f03e7H
	DD	09c921595H
	DD	07a6dbfebH
	DD	0595295daH
	DD	083bed42dH
	DD	0217458d3H
	DD	069e04929H
	DD	0c8c98e44H
	DD	089c2756aH
	DD	0798ef478H
	DD	03e58996bH
	DD	071b927ddH
	DD	04fe1beb6H
	DD	0ad88f017H
	DD	0ac20c966H
	DD	03ace7db4H
	DD	04adf6318H
	DD	0311ae582H
	DD	033519760H
	DD	07f536245H
	DD	07764b1e0H
	DD	0ae6bbb84H
	DD	0a081fe1cH
	DD	02b08f994H
	DD	068487058H
	DD	0fd458f19H
	DD	06cde9487H
	DD	0f87b52b7H
	DD	0d373ab23H
	DD	024b72e2H
	DD	08f1fe357H
	DD	0ab55662aH
	DD	028ebb207H
	DD	0c2b52f03H
	DD	07bc5869aH
	DD	0837d3a5H
	DD	0872830f2H
	DD	0a5bf23b2H
	DD	06a0302baH
	DD	08216ed5cH
	DD	01ccf8a2bH
	DD	0b479a792H
	DD	0f207f3f0H
	DD	0e2694ea1H
	DD	0f4da65cdH
	DD	0be0506d5H
	DD	06234d11fH
	DD	0fea6c48aH
	DD	0532e349dH
	DD	055f3a2a0H
	DD	0e18a0532H
	DD	0ebf6a475H
	DD	0ec830b39H
	DD	0ef6040aaH
	DD	09f715e06H
	DD	0106ebd51H
	DD	08a213ef9H
	DD	06dd963dH
	DD	053eddaeH
	DD	0bde64d46H
	DD	08d5491b5H
	DD	05dc47105H
	DD	0d406046fH
	DD	0155060ffH
	DD	0fb981924H
	DD	0e9bdd697H
	DD	0434089ccH
	DD	09ed96777H
	DD	042e8b0bdH
	DD	08b890788H
	DD	05b19e738H
	DD	0eec879dbH
	DD	0a7ca147H
	DD	0f427ce9H
	DD	01e84f8c9H
	DD	00H
	DD	086800983H
	DD	0ed2b3248H
	DD	070111eacH
	DD	0725a6c4eH
	DD	0ff0efdfbH
	DD	038850f56H
	DD	0d5ae3d1eH
	DD	0392d3627H
	DD	0d90f0a64H
	DD	0a65c6821H
	DD	0545b9bd1H
	DD	02e36243aH
	DD	0670a0cb1H
	DD	0e757930fH
	DD	096eeb4d2H
	DD	0919b1b9eH
	DD	0c5c0804fH
	DD	020dc61a2H
	DD	04b775a69H
	DD	01a121c16H
	DD	0ba93e20aH
	DD	02aa0c0e5H
	DD	0e0223c43H
	DD	0171b121dH
	DD	0d090e0bH
	DD	0c78bf2adH
	DD	0a8b62db9H
	DD	0a91e14c8H
	DD	019f15785H
	DD	0775af4cH
	DD	0dd99eebbH
	DD	0607fa3fdH
	DD	02601f79fH
	DD	0f5725cbcH
	DD	03b6644c5H
	DD	07efb5b34H
	DD	029438b76H
	DD	0c623cbdcH
	DD	0fcedb668H
	DD	0f1e4b863H
	DD	0dc31d7caH
	DD	085634210H
	DD	022971340H
	DD	011c68420H
	DD	0244a857dH
	DD	03dbbd2f8H
	DD	032f9ae11H
	DD	0a129c76dH
	DD	02f9e1d4bH
	DD	030b2dcf3H
	DD	052860decH
	DD	0e3c177d0H
	DD	016b32b6cH
	DD	0b970a999H
	DD	0489411faH
	DD	064e94722H
	DD	08cfca8c4H
	DD	03ff0a01aH
	DD	02c7d56d8H
	DD	0903322efH
	DD	04e4987c7H
	DD	0d138d9c1H
	DD	0a2ca8cfeH
	DD	0bd49836H
	DD	081f5a6cfH
	DD	0de7aa528H
	DD	08eb7da26H
	DD	0bfad3fa4H
	DD	09d3a2ce4H
	DD	09278500dH
	DD	0cc5f6a9bH
	DD	0467e5462H
	DD	0138df6c2H
	DD	0b8d890e8H
	DD	0f7392e5eH
	DD	0afc382f5H
	DD	0805d9fbeH
	DD	093d0697cH
	DD	02dd56fa9H
	DD	01225cfb3H
	DD	099acc83bH
	DD	07d1810a7H
	DD	0639ce86eH
	DD	0bb3bdb7bH
	DD	07826cd09H
	DD	018596ef4H
	DD	0b79aec01H
	DD	09a4f83a8H
	DD	06e95e665H
	DD	0e6ffaa7eH
	DD	0cfbc2108H
	DD	0e815efe6H
	DD	09be7bad9H
	DD	0366f4aceH
	DD	099fead4H
	DD	07cb029d6H
	DD	0b2a431afH
	DD	0233f2a31H
	DD	094a5c630H
	DD	066a235c0H
	DD	0bc4e7437H
	DD	0ca82fca6H
	DD	0d090e0b0H
	DD	0d8a73315H
	DD	09804f14aH
	DD	0daec41f7H
	DD	050cd7f0eH
	DD	0f691172fH
	DD	0d64d768dH
	DD	0b0ef434dH
	DD	04daacc54H
	DD	0496e4dfH
	DD	0b5d19ee3H
	DD	0886a4c1bH
	DD	01f2cc1b8H
	DD	05165467fH
	DD	0ea5e9d04H
	DD	0358c015dH
	DD	07487fa73H
	DD	0410bfb2eH
	DD	01d67b35aH
	DD	0d2db9252H
	DD	05610e933H
	DD	047d66d13H
	DD	061d79a8cH
	DD	0ca1377aH
	DD	014f8598eH
	DD	03c13eb89H
	DD	027a9ceeeH
	DD	0c961b735H
	DD	0e51ce1edH
	DD	0b1477a3cH
	DD	0dfd29c59H
	DD	073f2553fH
	DD	0ce141879H
	DD	037c773bfH
	DD	0cdf753eaH
	DD	0aafd5f5bH
	DD	06f3ddf14H
	DD	0db447886H
	DD	0f3afca81H
	DD	0c468b93eH
	DD	03424382cH
	DD	040a3c25fH
	DD	0c31d1672H
	DD	025e2bc0cH
	DD	0493c288bH
	DD	0950dff41H
	DD	01a83971H
	DD	0b30c08deH
	DD	0e4b4d89cH
	DD	0c1566490H
	DD	084cb7b61H
	DD	0b632d570H
	DD	05c6c4874H
	DD	057b8d042H
_U2	DD	0f45150a7H
	DD	0417e5365H
	DD	0171ac3a4H
	DD	0273a965eH
	DD	0ab3bcb6bH
	DD	09d1ff145H
	DD	0faacab58H
	DD	0e34b9303H
	DD	0302055faH
	DD	076adf66dH
	DD	0cc889176H
	DD	02f5254cH
	DD	0e54ffcd7H
	DD	02ac5d7cbH
	DD	035268044H
	DD	062b58fa3H
	DD	0b1de495aH
	DD	0ba25671bH
	DD	0ea45980eH
	DD	0fe5de1c0H
	DD	02fc30275H
	DD	04c8112f0H
	DD	0468da397H
	DD	0d36bc6f9H
	DD	08f03e75fH
	DD	09215959cH
	DD	06dbfeb7aH
	DD	05295da59H
	DD	0bed42d83H
	DD	07458d321H
	DD	0e0492969H
	DD	0c98e44c8H
	DD	0c2756a89H
	DD	08ef47879H
	DD	058996b3eH
	DD	0b927dd71H
	DD	0e1beb64fH
	DD	088f017adH
	DD	020c966acH
	DD	0ce7db43aH
	DD	0df63184aH
	DD	01ae58231H
	DD	051976033H
	DD	05362457fH
	DD	064b1e077H
	DD	06bbb84aeH
	DD	081fe1ca0H
	DD	08f9942bH
	DD	048705868H
	DD	0458f19fdH
	DD	0de94876cH
	DD	07b52b7f8H
	DD	073ab23d3H
	DD	04b72e202H
	DD	01fe3578fH
	DD	055662aabH
	DD	0ebb20728H
	DD	0b52f03c2H
	DD	0c5869a7bH
	DD	037d3a508H
	DD	02830f287H
	DD	0bf23b2a5H
	DD	0302ba6aH
	DD	016ed5c82H
	DD	0cf8a2b1cH
	DD	079a792b4H
	DD	07f3f0f2H
	DD	0694ea1e2H
	DD	0da65cdf4H
	DD	0506d5beH
	DD	034d11f62H
	DD	0a6c48afeH
	DD	02e349d53H
	DD	0f3a2a055H
	DD	08a0532e1H
	DD	0f6a475ebH
	DD	0830b39ecH
	DD	06040aaefH
	DD	0715e069fH
	DD	06ebd5110H
	DD	0213ef98aH
	DD	0dd963d06H
	DD	03eddae05H
	DD	0e64d46bdH
	DD	05491b58dH
	DD	0c471055dH
	DD	06046fd4H
	DD	05060ff15H
	DD	0981924fbH
	DD	0bdd697e9H
	DD	04089cc43H
	DD	0d967779eH
	DD	0e8b0bd42H
	DD	08907888bH
	DD	019e7385bH
	DD	0c879dbeeH
	DD	07ca1470aH
	DD	0427ce90fH
	DD	084f8c91eH
	DD	00H
	DD	080098386H
	DD	02b3248edH
	DD	0111eac70H
	DD	05a6c4e72H
	DD	0efdfbffH
	DD	0850f5638H
	DD	0ae3d1ed5H
	DD	02d362739H
	DD	0f0a64d9H
	DD	05c6821a6H
	DD	05b9bd154H
	DD	036243a2eH
	DD	0a0cb167H
	DD	057930fe7H
	DD	0eeb4d296H
	DD	09b1b9e91H
	DD	0c0804fc5H
	DD	0dc61a220H
	DD	0775a694bH
	DD	0121c161aH
	DD	093e20abaH
	DD	0a0c0e52aH
	DD	0223c43e0H
	DD	01b121d17H
	DD	090e0b0dH
	DD	08bf2adc7H
	DD	0b62db9a8H
	DD	01e14c8a9H
	DD	0f1578519H
	DD	075af4c07H
	DD	099eebbddH
	DD	07fa3fd60H
	DD	01f79f26H
	DD	0725cbcf5H
	DD	06644c53bH
	DD	0fb5b347eH
	DD	0438b7629H
	DD	023cbdcc6H
	DD	0edb668fcH
	DD	0e4b863f1H
	DD	031d7cadcH
	DD	063421085H
	DD	097134022H
	DD	0c6842011H
	DD	04a857d24H
	DD	0bbd2f83dH
	DD	0f9ae1132H
	DD	029c76da1H
	DD	09e1d4b2fH
	DD	0b2dcf330H
	DD	0860dec52H
	DD	0c177d0e3H
	DD	0b32b6c16H
	DD	070a999b9H
	DD	09411fa48H
	DD	0e9472264H
	DD	0fca8c48cH
	DD	0f0a01a3fH
	DD	07d56d82cH
	DD	03322ef90H
	DD	04987c74eH
	DD	038d9c1d1H
	DD	0ca8cfea2H
	DD	0d498360bH
	DD	0f5a6cf81H
	DD	07aa528deH
	DD	0b7da268eH
	DD	0ad3fa4bfH
	DD	03a2ce49dH
	DD	078500d92H
	DD	05f6a9bccH
	DD	07e546246H
	DD	08df6c213H
	DD	0d890e8b8H
	DD	0392e5ef7H
	DD	0c382f5afH
	DD	05d9fbe80H
	DD	0d0697c93H
	DD	0d56fa92dH
	DD	025cfb312H
	DD	0acc83b99H
	DD	01810a77dH
	DD	09ce86e63H
	DD	03bdb7bbbH
	DD	026cd0978H
	DD	0596ef418H
	DD	09aec01b7H
	DD	04f83a89aH
	DD	095e6656eH
	DD	0ffaa7ee6H
	DD	0bc2108cfH
	DD	015efe6e8H
	DD	0e7bad99bH
	DD	06f4ace36H
	DD	09fead409H
	DD	0b029d67cH
	DD	0a431afb2H
	DD	03f2a3123H
	DD	0a5c63094H
	DD	0a235c066H
	DD	04e7437bcH
	DD	082fca6caH
	DD	090e0b0d0H
	DD	0a73315d8H
	DD	04f14a98H
	DD	0ec41f7daH
	DD	0cd7f0e50H
	DD	091172ff6H
	DD	04d768dd6H
	DD	0ef434db0H
	DD	0aacc544dH
	DD	096e4df04H
	DD	0d19ee3b5H
	DD	06a4c1b88H
	DD	02cc1b81fH
	DD	065467f51H
	DD	05e9d04eaH
	DD	08c015d35H
	DD	087fa7374H
	DD	0bfb2e41H
	DD	067b35a1dH
	DD	0db9252d2H
	DD	010e93356H
	DD	0d66d1347H
	DD	0d79a8c61H
	DD	0a1377a0cH
	DD	0f8598e14H
	DD	013eb893cH
	DD	0a9ceee27H
	DD	061b735c9H
	DD	01ce1ede5H
	DD	0477a3cb1H
	DD	0d29c59dfH
	DD	0f2553f73H
	DD	0141879ceH
	DD	0c773bf37H
	DD	0f753eacdH
	DD	0fd5f5baaH
	DD	03ddf146fH
	DD	0447886dbH
	DD	0afca81f3H
	DD	068b93ec4H
	DD	024382c34H
	DD	0a3c25f40H
	DD	01d1672c3H
	DD	0e2bc0c25H
	DD	03c288b49H
	DD	0dff4195H
	DD	0a8397101H
	DD	0c08deb3H
	DD	0b4d89ce4H
	DD	0566490c1H
	DD	0cb7b6184H
	DD	032d570b6H
	DD	06c48745cH
	DD	0b8d04257H
_U3	DD	05150a7f4H
	DD	07e536541H
	DD	01ac3a417H
	DD	03a965e27H
	DD	03bcb6babH
	DD	01ff1459dH
	DD	0acab58faH
	DD	04b9303e3H
	DD	02055fa30H
	DD	0adf66d76H
	DD	0889176ccH
	DD	0f5254c02H
	DD	04ffcd7e5H
	DD	0c5d7cb2aH
	DD	026804435H
	DD	0b58fa362H
	DD	0de495ab1H
	DD	025671bbaH
	DD	045980eeaH
	DD	05de1c0feH
	DD	0c302752fH
	DD	08112f04cH
	DD	08da39746H
	DD	06bc6f9d3H
	DD	03e75f8fH
	DD	015959c92H
	DD	0bfeb7a6dH
	DD	095da5952H
	DD	0d42d83beH
	DD	058d32174H
	DD	0492969e0H
	DD	08e44c8c9H
	DD	0756a89c2H
	DD	0f478798eH
	DD	0996b3e58H
	DD	027dd71b9H
	DD	0beb64fe1H
	DD	0f017ad88H
	DD	0c966ac20H
	DD	07db43aceH
	DD	063184adfH
	DD	0e582311aH
	DD	097603351H
	DD	062457f53H
	DD	0b1e07764H
	DD	0bb84ae6bH
	DD	0fe1ca081H
	DD	0f9942b08H
	DD	070586848H
	DD	08f19fd45H
	DD	094876cdeH
	DD	052b7f87bH
	DD	0ab23d373H
	DD	072e2024bH
	DD	0e3578f1fH
	DD	0662aab55H
	DD	0b20728ebH
	DD	02f03c2b5H
	DD	0869a7bc5H
	DD	0d3a50837H
	DD	030f28728H
	DD	023b2a5bfH
	DD	02ba6a03H
	DD	0ed5c8216H
	DD	08a2b1ccfH
	DD	0a792b479H
	DD	0f3f0f207H
	DD	04ea1e269H
	DD	065cdf4daH
	DD	06d5be05H
	DD	0d11f6234H
	DD	0c48afea6H
	DD	0349d532eH
	DD	0a2a055f3H
	DD	0532e18aH
	DD	0a475ebf6H
	DD	0b39ec83H
	DD	040aaef60H
	DD	05e069f71H
	DD	0bd51106eH
	DD	03ef98a21H
	DD	0963d06ddH
	DD	0ddae053eH
	DD	04d46bde6H
	DD	091b58d54H
	DD	071055dc4H
	DD	046fd406H
	DD	060ff1550H
	DD	01924fb98H
	DD	0d697e9bdH
	DD	089cc4340H
	DD	067779ed9H
	DD	0b0bd42e8H
	DD	07888b89H
	DD	0e7385b19H
	DD	079dbeec8H
	DD	0a1470a7cH
	DD	07ce90f42H
	DD	0f8c91e84H
	DD	00H
	DD	09838680H
	DD	03248ed2bH
	DD	01eac7011H
	DD	06c4e725aH
	DD	0fdfbff0eH
	DD	0f563885H
	DD	03d1ed5aeH
	DD	03627392dH
	DD	0a64d90fH
	DD	06821a65cH
	DD	09bd1545bH
	DD	0243a2e36H
	DD	0cb1670aH
	DD	0930fe757H
	DD	0b4d296eeH
	DD	01b9e919bH
	DD	0804fc5c0H
	DD	061a220dcH
	DD	05a694b77H
	DD	01c161a12H
	DD	0e20aba93H
	DD	0c0e52aa0H
	DD	03c43e022H
	DD	0121d171bH
	DD	0e0b0d09H
	DD	0f2adc78bH
	DD	02db9a8b6H
	DD	014c8a91eH
	DD	0578519f1H
	DD	0af4c0775H
	DD	0eebbdd99H
	DD	0a3fd607fH
	DD	0f79f2601H
	DD	05cbcf572H
	DD	044c53b66H
	DD	05b347efbH
	DD	08b762943H
	DD	0cbdcc623H
	DD	0b668fcedH
	DD	0b863f1e4H
	DD	0d7cadc31H
	DD	042108563H
	DD	013402297H
	DD	0842011c6H
	DD	0857d244aH
	DD	0d2f83dbbH
	DD	0ae1132f9H
	DD	0c76da129H
	DD	01d4b2f9eH
	DD	0dcf330b2H
	DD	0dec5286H
	DD	077d0e3c1H
	DD	02b6c16b3H
	DD	0a999b970H
	DD	011fa4894H
	DD	0472264e9H
	DD	0a8c48cfcH
	DD	0a01a3ff0H
	DD	056d82c7dH
	DD	022ef9033H
	DD	087c74e49H
	DD	0d9c1d138H
	DD	08cfea2caH
	DD	098360bd4H
	DD	0a6cf81f5H
	DD	0a528de7aH
	DD	0da268eb7H
	DD	03fa4bfadH
	DD	02ce49d3aH
	DD	0500d9278H
	DD	06a9bcc5fH
	DD	05462467eH
	DD	0f6c2138dH
	DD	090e8b8d8H
	DD	02e5ef739H
	DD	082f5afc3H
	DD	09fbe805dH
	DD	0697c93d0H
	DD	06fa92dd5H
	DD	0cfb31225H
	DD	0c83b99acH
	DD	010a77d18H
	DD	0e86e639cH
	DD	0db7bbb3bH
	DD	0cd097826H
	DD	06ef41859H
	DD	0ec01b79aH
	DD	083a89a4fH
	DD	0e6656e95H
	DD	0aa7ee6ffH
	DD	02108cfbcH
	DD	0efe6e815H
	DD	0bad99be7H
	DD	04ace366fH
	DD	0ead4099fH
	DD	029d67cb0H
	DD	031afb2a4H
	DD	02a31233fH
	DD	0c63094a5H
	DD	035c066a2H
	DD	07437bc4eH
	DD	0fca6ca82H
	DD	0e0b0d090H
	DD	03315d8a7H
	DD	0f14a9804H
	DD	041f7daecH
	DD	07f0e50cdH
	DD	0172ff691H
	DD	0768dd64dH
	DD	0434db0efH
	DD	0cc544daaH
	DD	0e4df0496H
	DD	09ee3b5d1H
	DD	04c1b886aH
	DD	0c1b81f2cH
	DD	0467f5165H
	DD	09d04ea5eH
	DD	015d358cH
	DD	0fa737487H
	DD	0fb2e410bH
	DD	0b35a1d67H
	DD	09252d2dbH
	DD	0e9335610H
	DD	06d1347d6H
	DD	09a8c61d7H
	DD	0377a0ca1H
	DD	0598e14f8H
	DD	0eb893c13H
	DD	0ceee27a9H
	DD	0b735c961H
	DD	0e1ede51cH
	DD	07a3cb147H
	DD	09c59dfd2H
	DD	0553f73f2H
	DD	01879ce14H
	DD	073bf37c7H
	DD	053eacdf7H
	DD	05f5baafdH
	DD	0df146f3dH
	DD	07886db44H
	DD	0ca81f3afH
	DD	0b93ec468H
	DD	0382c3424H
	DD	0c25f40a3H
	DD	01672c31dH
	DD	0bc0c25e2H
	DD	0288b493cH
	DD	0ff41950dH
	DD	0397101a8H
	DD	08deb30cH
	DD	0d89ce4b4H
	DD	06490c156H
	DD	07b6184cbH
	DD	0d570b632H
	DD	048745c6cH
	DD	0d04257b8H
_aes_sbox DB	063H
	DB	07cH
	DB	077H
	DB	07bH
	DB	0f2H
	DB	06bH
	DB	06fH
	DB	0c5H
	DB	030H
	DB	01H
	DB	067H
	DB	02bH
	DB	0feH
	DB	0d7H
	DB	0abH
	DB	076H
	DB	0caH
	DB	082H
	DB	0c9H
	DB	07dH
	DB	0faH
	DB	059H
	DB	047H
	DB	0f0H
	DB	0adH
	DB	0d4H
	DB	0a2H
	DB	0afH
	DB	09cH
	DB	0a4H
	DB	072H
	DB	0c0H
	DB	0b7H
	DB	0fdH
	DB	093H
	DB	026H
	DB	036H
	DB	03fH
	DB	0f7H
	DB	0ccH
	DB	034H
	DB	0a5H
	DB	0e5H
	DB	0f1H
	DB	071H
	DB	0d8H
	DB	031H
	DB	015H
	DB	04H
	DB	0c7H
	DB	023H
	DB	0c3H
	DB	018H
	DB	096H
	DB	05H
	DB	09aH
	DB	07H
	DB	012H
	DB	080H
	DB	0e2H
	DB	0ebH
	DB	027H
	DB	0b2H
	DB	075H
	DB	09H
	DB	083H
	DB	02cH
	DB	01aH
	DB	01bH
	DB	06eH
	DB	05aH
	DB	0a0H
	DB	052H
	DB	03bH
	DB	0d6H
	DB	0b3H
	DB	029H
	DB	0e3H
	DB	02fH
	DB	084H
	DB	053H
	DB	0d1H
	DB	00H
	DB	0edH
	DB	020H
	DB	0fcH
	DB	0b1H
	DB	05bH
	DB	06aH
	DB	0cbH
	DB	0beH
	DB	039H
	DB	04aH
	DB	04cH
	DB	058H
	DB	0cfH
	DB	0d0H
	DB	0efH
	DB	0aaH
	DB	0fbH
	DB	043H
	DB	04dH
	DB	033H
	DB	085H
	DB	045H
	DB	0f9H
	DB	02H
	DB	07fH
	DB	050H
	DB	03cH
	DB	09fH
	DB	0a8H
	DB	051H
	DB	0a3H
	DB	040H
	DB	08fH
	DB	092H
	DB	09dH
	DB	038H
	DB	0f5H
	DB	0bcH
	DB	0b6H
	DB	0daH
	DB	021H
	DB	010H
	DB	0ffH
	DB	0f3H
	DB	0d2H
	DB	0cdH
	DB	0cH
	DB	013H
	DB	0ecH
	DB	05fH
	DB	097H
	DB	044H
	DB	017H
	DB	0c4H
	DB	0a7H
	DB	07eH
	DB	03dH
	DB	064H
	DB	05dH
	DB	019H
	DB	073H
	DB	060H
	DB	081H
	DB	04fH
	DB	0dcH
	DB	022H
	DB	02aH
	DB	090H
	DB	088H
	DB	046H
	DB	0eeH
	DB	0b8H
	DB	014H
	DB	0deH
	DB	05eH
	DB	0bH
	DB	0dbH
	DB	0e0H
	DB	032H
	DB	03aH
	DB	0aH
	DB	049H
	DB	06H
	DB	024H
	DB	05cH
	DB	0c2H
	DB	0d3H
	DB	0acH
	DB	062H
	DB	091H
	DB	095H
	DB	0e4H
	DB	079H
	DB	0e7H
	DB	0c8H
	DB	037H
	DB	06dH
	DB	08dH
	DB	0d5H
	DB	04eH
	DB	0a9H
	DB	06cH
	DB	056H
	DB	0f4H
	DB	0eaH
	DB	065H
	DB	07aH
	DB	0aeH
	DB	08H
	DB	0baH
	DB	078H
	DB	025H
	DB	02eH
	DB	01cH
	DB	0a6H
	DB	0b4H
	DB	0c6H
	DB	0e8H
	DB	0ddH
	DB	074H
	DB	01fH
	DB	04bH
	DB	0bdH
	DB	08bH
	DB	08aH
	DB	070H
	DB	03eH
	DB	0b5H
	DB	066H
	DB	048H
	DB	03H
	DB	0f6H
	DB	0eH
	DB	061H
	DB	035H
	DB	057H
	DB	0b9H
	DB	086H
	DB	0c1H
	DB	01dH
	DB	09eH
	DB	0e1H
	DB	0f8H
	DB	098H
	DB	011H
	DB	069H
	DB	0d9H
	DB	08eH
	DB	094H
	DB	09bH
	DB	01eH
	DB	087H
	DB	0e9H
	DB	0ceH
	DB	055H
	DB	028H
	DB	0dfH
	DB	08cH
	DB	0a1H
	DB	089H
	DB	0dH
	DB	0bfH
	DB	0e6H
	DB	042H
	DB	068H
	DB	041H
	DB	099H
	DB	02dH
	DB	0fH
	DB	0b0H
	DB	054H
	DB	0bbH
	DB	016H
_aes_inv_sbox DB 052H
	DB	09H
	DB	06aH
	DB	0d5H
	DB	030H
	DB	036H
	DB	0a5H
	DB	038H
	DB	0bfH
	DB	040H
	DB	0a3H
	DB	09eH
	DB	081H
	DB	0f3H
	DB	0d7H
	DB	0fbH
	DB	07cH
	DB	0e3H
	DB	039H
	DB	082H
	DB	09bH
	DB	02fH
	DB	0ffH
	DB	087H
	DB	034H
	DB	08eH
	DB	043H
	DB	044H
	DB	0c4H
	DB	0deH
	DB	0e9H
	DB	0cbH
	DB	054H
	DB	07bH
	DB	094H
	DB	032H
	DB	0a6H
	DB	0c2H
	DB	023H
	DB	03dH
	DB	0eeH
	DB	04cH
	DB	095H
	DB	0bH
	DB	042H
	DB	0faH
	DB	0c3H
	DB	04eH
	DB	08H
	DB	02eH
	DB	0a1H
	DB	066H
	DB	028H
	DB	0d9H
	DB	024H
	DB	0b2H
	DB	076H
	DB	05bH
	DB	0a2H
	DB	049H
	DB	06dH
	DB	08bH
	DB	0d1H
	DB	025H
	DB	072H
	DB	0f8H
	DB	0f6H
	DB	064H
	DB	086H
	DB	068H
	DB	098H
	DB	016H
	DB	0d4H
	DB	0a4H
	DB	05cH
	DB	0ccH
	DB	05dH
	DB	065H
	DB	0b6H
	DB	092H
	DB	06cH
	DB	070H
	DB	048H
	DB	050H
	DB	0fdH
	DB	0edH
	DB	0b9H
	DB	0daH
	DB	05eH
	DB	015H
	DB	046H
	DB	057H
	DB	0a7H
	DB	08dH
	DB	09dH
	DB	084H
	DB	090H
	DB	0d8H
	DB	0abH
	DB	00H
	DB	08cH
	DB	0bcH
	DB	0d3H
	DB	0aH
	DB	0f7H
	DB	0e4H
	DB	058H
	DB	05H
	DB	0b8H
	DB	0b3H
	DB	045H
	DB	06H
	DB	0d0H
	DB	02cH
	DB	01eH
	DB	08fH
	DB	0caH
	DB	03fH
	DB	0fH
	DB	02H
	DB	0c1H
	DB	0afH
	DB	0bdH
	DB	03H
	DB	01H
	DB	013H
	DB	08aH
	DB	06bH
	DB	03aH
	DB	091H
	DB	011H
	DB	041H
	DB	04fH
	DB	067H
	DB	0dcH
	DB	0eaH
	DB	097H
	DB	0f2H
	DB	0cfH
	DB	0ceH
	DB	0f0H
	DB	0b4H
	DB	0e6H
	DB	073H
	DB	096H
	DB	0acH
	DB	074H
	DB	022H
	DB	0e7H
	DB	0adH
	DB	035H
	DB	085H
	DB	0e2H
	DB	0f9H
	DB	037H
	DB	0e8H
	DB	01cH
	DB	075H
	DB	0dfH
	DB	06eH
	DB	047H
	DB	0f1H
	DB	01aH
	DB	071H
	DB	01dH
	DB	029H
	DB	0c5H
	DB	089H
	DB	06fH
	DB	0b7H
	DB	062H
	DB	0eH
	DB	0aaH
	DB	018H
	DB	0beH
	DB	01bH
	DB	0fcH
	DB	056H
	DB	03eH
	DB	04bH
	DB	0c6H
	DB	0d2H
	DB	079H
	DB	020H
	DB	09aH
	DB	0dbH
	DB	0c0H
	DB	0feH
	DB	078H
	DB	0cdH
	DB	05aH
	DB	0f4H
	DB	01fH
	DB	0ddH
	DB	0a8H
	DB	033H
	DB	088H
	DB	07H
	DB	0c7H
	DB	031H
	DB	0b1H
	DB	012H
	DB	010H
	DB	059H
	DB	027H
	DB	080H
	DB	0ecH
	DB	05fH
	DB	060H
	DB	051H
	DB	07fH
	DB	0a9H
	DB	019H
	DB	0b5H
	DB	04aH
	DB	0dH
	DB	02dH
	DB	0e5H
	DB	07aH
	DB	09fH
	DB	093H
	DB	0c9H
	DB	09cH
	DB	0efH
	DB	0a0H
	DB	0e0H
	DB	03bH
	DB	04dH
	DB	0aeH
	DB	02aH
	DB	0f5H
	DB	0b0H
	DB	0c8H
	DB	0ebH
	DB	0bbH
	DB	03cH
	DB	083H
	DB	053H
	DB	099H
	DB	061H
	DB	017H
	DB	02bH
	DB	04H
	DB	07eH
	DB	0baH
	DB	077H
	DB	0d6H
	DB	026H
	DB	0e1H
	DB	069H
	DB	014H
	DB	063H
	DB	055H
	DB	021H
	DB	0cH
	DB	07dH
_DATA	ENDS
PUBLIC	_aes_expand_encryption_key
PUBLIC	_aes_expand_decryption_key
PUBLIC	_aes_encrypt
PUBLIC	_aes_decrypt
EXTRN	_v128_copy_octet_string:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _aes_inv_final_round
_TEXT	SEGMENT
_tmp$ = -1						; size = 1
_state$ = 8						; size = 4
_round_key$ = 12					; size = 4
_aes_inv_final_round PROC				; COMDAT
; File d:\develop\webrtcbuilds-builder\out\src\third_party\libsrtp\srtp\crypto\cipher\aes.c
; Line 1717
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1722
	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _state$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	ecx, DWORD PTR _state$[ebp]
	mov	al, BYTE PTR _aes_inv_sbox[eax]
	mov	BYTE PTR [ecx+edx], al
; Line 1723
	mov	ecx, 1
	shl	ecx, 2
	mov	edx, DWORD PTR _state$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	mov	ecx, 1
	shl	ecx, 2
	mov	edx, DWORD PTR _state$[ebp]
	mov	al, BYTE PTR _aes_inv_sbox[eax]
	mov	BYTE PTR [edx+ecx], al
; Line 1724
	mov	ecx, 1
	shl	ecx, 3
	mov	edx, DWORD PTR _state$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	mov	ecx, 1
	shl	ecx, 3
	mov	edx, DWORD PTR _state$[ebp]
	mov	al, BYTE PTR _aes_inv_sbox[eax]
	mov	BYTE PTR [edx+ecx], al
; Line 1725
	mov	ecx, 1
	imul	edx, ecx, 12
	mov	eax, DWORD PTR _state$[ebp]
	movzx	ecx, BYTE PTR [eax+edx]
	mov	edx, 1
	imul	eax, edx, 12
	mov	edx, DWORD PTR _state$[ebp]
	mov	cl, BYTE PTR _aes_inv_sbox[ecx]
	mov	BYTE PTR [edx+eax], cl
; Line 1728
	mov	edx, 1
	imul	eax, edx, 13
	mov	ecx, DWORD PTR _state$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	mov	al, BYTE PTR _aes_inv_sbox[edx]
	mov	BYTE PTR _tmp$[ebp], al
; Line 1729
	mov	ecx, 1
	imul	edx, ecx, 9
	mov	eax, DWORD PTR _state$[ebp]
	movzx	ecx, BYTE PTR [eax+edx]
	mov	edx, 1
	imul	eax, edx, 13
	mov	edx, DWORD PTR _state$[ebp]
	mov	cl, BYTE PTR _aes_inv_sbox[ecx]
	mov	BYTE PTR [edx+eax], cl
; Line 1730
	mov	edx, 1
	imul	eax, edx, 5
	mov	ecx, DWORD PTR _state$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	mov	eax, 1
	imul	ecx, eax, 9
	mov	eax, DWORD PTR _state$[ebp]
	mov	dl, BYTE PTR _aes_inv_sbox[edx]
	mov	BYTE PTR [eax+ecx], dl
; Line 1731
	mov	eax, 1
	shl	eax, 0
	mov	ecx, DWORD PTR _state$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	mov	eax, 1
	imul	ecx, eax, 5
	mov	eax, DWORD PTR _state$[ebp]
	mov	dl, BYTE PTR _aes_inv_sbox[edx]
	mov	BYTE PTR [eax+ecx], dl
; Line 1732
	mov	eax, 1
	shl	eax, 0
	mov	ecx, DWORD PTR _state$[ebp]
	mov	dl, BYTE PTR _tmp$[ebp]
	mov	BYTE PTR [ecx+eax], dl
; Line 1735
	mov	eax, 1
	shl	eax, 1
	mov	ecx, DWORD PTR _state$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	mov	al, BYTE PTR _aes_inv_sbox[edx]
	mov	BYTE PTR _tmp$[ebp], al
; Line 1736
	mov	ecx, 1
	imul	edx, ecx, 10
	mov	eax, DWORD PTR _state$[ebp]
	movzx	ecx, BYTE PTR [eax+edx]
	mov	edx, 1
	shl	edx, 1
	mov	eax, DWORD PTR _state$[ebp]
	mov	cl, BYTE PTR _aes_inv_sbox[ecx]
	mov	BYTE PTR [eax+edx], cl
; Line 1737
	mov	edx, 1
	imul	eax, edx, 10
	mov	ecx, DWORD PTR _state$[ebp]
	mov	dl, BYTE PTR _tmp$[ebp]
	mov	BYTE PTR [ecx+eax], dl
; Line 1738
	mov	eax, 1
	imul	ecx, eax, 6
	mov	edx, DWORD PTR _state$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	mov	cl, BYTE PTR _aes_inv_sbox[eax]
	mov	BYTE PTR _tmp$[ebp], cl
; Line 1739
	mov	edx, 1
	imul	eax, edx, 14
	mov	ecx, DWORD PTR _state$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	mov	eax, 1
	imul	ecx, eax, 6
	mov	eax, DWORD PTR _state$[ebp]
	mov	dl, BYTE PTR _aes_inv_sbox[edx]
	mov	BYTE PTR [eax+ecx], dl
; Line 1740
	mov	eax, 1
	imul	ecx, eax, 14
	mov	edx, DWORD PTR _state$[ebp]
	mov	al, BYTE PTR _tmp$[ebp]
	mov	BYTE PTR [edx+ecx], al
; Line 1743
	mov	ecx, 1
	imul	edx, ecx, 3
	mov	eax, DWORD PTR _state$[ebp]
	movzx	ecx, BYTE PTR [eax+edx]
	mov	dl, BYTE PTR _aes_inv_sbox[ecx]
	mov	BYTE PTR _tmp$[ebp], dl
; Line 1744
	mov	eax, 1
	imul	ecx, eax, 7
	mov	edx, DWORD PTR _state$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	mov	ecx, 1
	imul	edx, ecx, 3
	mov	ecx, DWORD PTR _state$[ebp]
	mov	al, BYTE PTR _aes_inv_sbox[eax]
	mov	BYTE PTR [ecx+edx], al
; Line 1745
	mov	ecx, 1
	imul	edx, ecx, 11
	mov	eax, DWORD PTR _state$[ebp]
	movzx	ecx, BYTE PTR [eax+edx]
	mov	edx, 1
	imul	eax, edx, 7
	mov	edx, DWORD PTR _state$[ebp]
	mov	cl, BYTE PTR _aes_inv_sbox[ecx]
	mov	BYTE PTR [edx+eax], cl
; Line 1746
	mov	edx, 1
	imul	eax, edx, 15
	mov	ecx, DWORD PTR _state$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	mov	eax, 1
	imul	ecx, eax, 11
	mov	eax, DWORD PTR _state$[ebp]
	mov	dl, BYTE PTR _aes_inv_sbox[edx]
	mov	BYTE PTR [eax+ecx], dl
; Line 1747
	mov	eax, 1
	imul	ecx, eax, 15
	mov	edx, DWORD PTR _state$[ebp]
	mov	al, BYTE PTR _tmp$[ebp]
	mov	BYTE PTR [edx+ecx], al
; Line 1749
	mov	ecx, 8
	imul	edx, ecx, 0
	mov	eax, 8
	imul	ecx, eax, 0
	mov	eax, DWORD PTR _state$[ebp]
	mov	esi, DWORD PTR _round_key$[ebp]
	mov	edi, DWORD PTR [eax+edx]
	xor	edi, DWORD PTR [esi+ecx]
	mov	edx, DWORD PTR [eax+edx+4]
	xor	edx, DWORD PTR [esi+ecx+4]
	mov	eax, 8
	imul	ecx, eax, 0
	mov	eax, DWORD PTR _state$[ebp]
	mov	DWORD PTR [eax+ecx], edi
	mov	DWORD PTR [eax+ecx+4], edx
	mov	ecx, 8
	shl	ecx, 0
	mov	edx, 8
	shl	edx, 0
	mov	eax, DWORD PTR _state$[ebp]
	mov	esi, DWORD PTR _round_key$[ebp]
	mov	edi, DWORD PTR [eax+ecx]
	xor	edi, DWORD PTR [esi+edx]
	mov	ecx, DWORD PTR [eax+ecx+4]
	xor	ecx, DWORD PTR [esi+edx+4]
	mov	edx, 8
	shl	edx, 0
	mov	eax, DWORD PTR _state$[ebp]
	mov	DWORD PTR [eax+edx], edi
	mov	DWORD PTR [eax+edx+4], ecx
; Line 1750
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_aes_inv_final_round ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _aes_final_round
_TEXT	SEGMENT
_tmp$ = -1						; size = 1
_state$ = 8						; size = 4
_round_key$ = 12					; size = 4
_aes_final_round PROC					; COMDAT
; File d:\develop\webrtcbuilds-builder\out\src\third_party\libsrtp\srtp\crypto\cipher\aes.c
; Line 1681
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1686
	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _state$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	ecx, DWORD PTR _state$[ebp]
	mov	al, BYTE PTR _aes_sbox[eax]
	mov	BYTE PTR [ecx+edx], al
; Line 1687
	mov	ecx, 1
	shl	ecx, 2
	mov	edx, DWORD PTR _state$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	mov	ecx, 1
	shl	ecx, 2
	mov	edx, DWORD PTR _state$[ebp]
	mov	al, BYTE PTR _aes_sbox[eax]
	mov	BYTE PTR [edx+ecx], al
; Line 1688
	mov	ecx, 1
	shl	ecx, 3
	mov	edx, DWORD PTR _state$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	mov	ecx, 1
	shl	ecx, 3
	mov	edx, DWORD PTR _state$[ebp]
	mov	al, BYTE PTR _aes_sbox[eax]
	mov	BYTE PTR [edx+ecx], al
; Line 1689
	mov	ecx, 1
	imul	edx, ecx, 12
	mov	eax, DWORD PTR _state$[ebp]
	movzx	ecx, BYTE PTR [eax+edx]
	mov	edx, 1
	imul	eax, edx, 12
	mov	edx, DWORD PTR _state$[ebp]
	mov	cl, BYTE PTR _aes_sbox[ecx]
	mov	BYTE PTR [edx+eax], cl
; Line 1692
	mov	edx, 1
	shl	edx, 0
	mov	eax, DWORD PTR _state$[ebp]
	movzx	ecx, BYTE PTR [eax+edx]
	mov	dl, BYTE PTR _aes_sbox[ecx]
	mov	BYTE PTR _tmp$[ebp], dl
; Line 1693
	mov	eax, 1
	imul	ecx, eax, 5
	mov	edx, DWORD PTR _state$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	mov	ecx, 1
	shl	ecx, 0
	mov	edx, DWORD PTR _state$[ebp]
	mov	al, BYTE PTR _aes_sbox[eax]
	mov	BYTE PTR [edx+ecx], al
; Line 1694
	mov	ecx, 1
	imul	edx, ecx, 9
	mov	eax, DWORD PTR _state$[ebp]
	movzx	ecx, BYTE PTR [eax+edx]
	mov	edx, 1
	imul	eax, edx, 5
	mov	edx, DWORD PTR _state$[ebp]
	mov	cl, BYTE PTR _aes_sbox[ecx]
	mov	BYTE PTR [edx+eax], cl
; Line 1695
	mov	edx, 1
	imul	eax, edx, 13
	mov	ecx, DWORD PTR _state$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	mov	eax, 1
	imul	ecx, eax, 9
	mov	eax, DWORD PTR _state$[ebp]
	mov	dl, BYTE PTR _aes_sbox[edx]
	mov	BYTE PTR [eax+ecx], dl
; Line 1696
	mov	eax, 1
	imul	ecx, eax, 13
	mov	edx, DWORD PTR _state$[ebp]
	mov	al, BYTE PTR _tmp$[ebp]
	mov	BYTE PTR [edx+ecx], al
; Line 1699
	mov	ecx, 1
	imul	edx, ecx, 10
	mov	eax, DWORD PTR _state$[ebp]
	movzx	ecx, BYTE PTR [eax+edx]
	mov	dl, BYTE PTR _aes_sbox[ecx]
	mov	BYTE PTR _tmp$[ebp], dl
; Line 1700
	mov	eax, 1
	shl	eax, 1
	mov	ecx, DWORD PTR _state$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	mov	eax, 1
	imul	ecx, eax, 10
	mov	eax, DWORD PTR _state$[ebp]
	mov	dl, BYTE PTR _aes_sbox[edx]
	mov	BYTE PTR [eax+ecx], dl
; Line 1701
	mov	eax, 1
	shl	eax, 1
	mov	ecx, DWORD PTR _state$[ebp]
	mov	dl, BYTE PTR _tmp$[ebp]
	mov	BYTE PTR [ecx+eax], dl
; Line 1702
	mov	eax, 1
	imul	ecx, eax, 14
	mov	edx, DWORD PTR _state$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	mov	cl, BYTE PTR _aes_sbox[eax]
	mov	BYTE PTR _tmp$[ebp], cl
; Line 1703
	mov	edx, 1
	imul	eax, edx, 6
	mov	ecx, DWORD PTR _state$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	mov	eax, 1
	imul	ecx, eax, 14
	mov	eax, DWORD PTR _state$[ebp]
	mov	dl, BYTE PTR _aes_sbox[edx]
	mov	BYTE PTR [eax+ecx], dl
; Line 1704
	mov	eax, 1
	imul	ecx, eax, 6
	mov	edx, DWORD PTR _state$[ebp]
	mov	al, BYTE PTR _tmp$[ebp]
	mov	BYTE PTR [edx+ecx], al
; Line 1707
	mov	ecx, 1
	imul	edx, ecx, 15
	mov	eax, DWORD PTR _state$[ebp]
	movzx	ecx, BYTE PTR [eax+edx]
	mov	dl, BYTE PTR _aes_sbox[ecx]
	mov	BYTE PTR _tmp$[ebp], dl
; Line 1708
	mov	eax, 1
	imul	ecx, eax, 11
	mov	edx, DWORD PTR _state$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	mov	ecx, 1
	imul	edx, ecx, 15
	mov	ecx, DWORD PTR _state$[ebp]
	mov	al, BYTE PTR _aes_sbox[eax]
	mov	BYTE PTR [ecx+edx], al
; Line 1709
	mov	ecx, 1
	imul	edx, ecx, 7
	mov	eax, DWORD PTR _state$[ebp]
	movzx	ecx, BYTE PTR [eax+edx]
	mov	edx, 1
	imul	eax, edx, 11
	mov	edx, DWORD PTR _state$[ebp]
	mov	cl, BYTE PTR _aes_sbox[ecx]
	mov	BYTE PTR [edx+eax], cl
; Line 1710
	mov	edx, 1
	imul	eax, edx, 3
	mov	ecx, DWORD PTR _state$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	mov	eax, 1
	imul	ecx, eax, 7
	mov	eax, DWORD PTR _state$[ebp]
	mov	dl, BYTE PTR _aes_sbox[edx]
	mov	BYTE PTR [eax+ecx], dl
; Line 1711
	mov	eax, 1
	imul	ecx, eax, 3
	mov	edx, DWORD PTR _state$[ebp]
	mov	al, BYTE PTR _tmp$[ebp]
	mov	BYTE PTR [edx+ecx], al
; Line 1713
	mov	ecx, 8
	imul	edx, ecx, 0
	mov	eax, 8
	imul	ecx, eax, 0
	mov	eax, DWORD PTR _state$[ebp]
	mov	esi, DWORD PTR _round_key$[ebp]
	mov	edi, DWORD PTR [eax+edx]
	xor	edi, DWORD PTR [esi+ecx]
	mov	edx, DWORD PTR [eax+edx+4]
	xor	edx, DWORD PTR [esi+ecx+4]
	mov	eax, 8
	imul	ecx, eax, 0
	mov	eax, DWORD PTR _state$[ebp]
	mov	DWORD PTR [eax+ecx], edi
	mov	DWORD PTR [eax+ecx+4], edx
	mov	ecx, 8
	shl	ecx, 0
	mov	edx, 8
	shl	edx, 0
	mov	eax, DWORD PTR _state$[ebp]
	mov	esi, DWORD PTR _round_key$[ebp]
	mov	edi, DWORD PTR [eax+ecx]
	xor	edi, DWORD PTR [esi+edx]
	mov	ecx, DWORD PTR [eax+ecx+4]
	xor	ecx, DWORD PTR [esi+edx+4]
	mov	edx, 8
	shl	edx, 0
	mov	eax, DWORD PTR _state$[ebp]
	mov	DWORD PTR [eax+edx], edi
	mov	DWORD PTR [eax+edx+4], ecx
; Line 1714
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_aes_final_round ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _aes_inv_round
_TEXT	SEGMENT
_column3$ = -16						; size = 4
_column2$ = -12						; size = 4
_column1$ = -8						; size = 4
_column0$ = -4						; size = 4
_state$ = 8						; size = 4
_round_key$ = 12					; size = 4
_aes_inv_round PROC					; COMDAT
; File d:\develop\webrtcbuilds-builder\out\src\third_party\libsrtp\srtp\crypto\cipher\aes.c
; Line 1655
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 1662
	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _state$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	mov	ecx, 1
	imul	edx, ecx, 13
	mov	ecx, DWORD PTR _state$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	mov	eax, DWORD PTR _U0[eax*4]
	xor	eax, DWORD PTR _U1[edx*4]
	mov	ecx, 1
	imul	edx, ecx, 10
	mov	ecx, DWORD PTR _state$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	xor	eax, DWORD PTR _U2[edx*4]
	mov	ecx, 1
	imul	edx, ecx, 7
	mov	ecx, DWORD PTR _state$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	xor	eax, DWORD PTR _U3[edx*4]
	mov	DWORD PTR _column0$[ebp], eax
; Line 1665
	mov	eax, 1
	shl	eax, 2
	mov	ecx, DWORD PTR _state$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	mov	eax, 1
	shl	eax, 0
	mov	ecx, DWORD PTR _state$[ebp]
	movzx	eax, BYTE PTR [ecx+eax]
	mov	ecx, DWORD PTR _U0[edx*4]
	xor	ecx, DWORD PTR _U1[eax*4]
	mov	edx, 1
	imul	eax, edx, 14
	mov	edx, DWORD PTR _state$[ebp]
	movzx	eax, BYTE PTR [edx+eax]
	xor	ecx, DWORD PTR _U2[eax*4]
	mov	edx, 1
	imul	eax, edx, 11
	mov	edx, DWORD PTR _state$[ebp]
	movzx	eax, BYTE PTR [edx+eax]
	xor	ecx, DWORD PTR _U3[eax*4]
	mov	DWORD PTR _column1$[ebp], ecx
; Line 1668
	mov	ecx, 1
	shl	ecx, 3
	mov	edx, DWORD PTR _state$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	mov	ecx, 1
	imul	edx, ecx, 5
	mov	ecx, DWORD PTR _state$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	mov	eax, DWORD PTR _U0[eax*4]
	xor	eax, DWORD PTR _U1[edx*4]
	mov	ecx, 1
	shl	ecx, 1
	mov	edx, DWORD PTR _state$[ebp]
	movzx	ecx, BYTE PTR [edx+ecx]
	xor	eax, DWORD PTR _U2[ecx*4]
	mov	edx, 1
	imul	ecx, edx, 15
	mov	edx, DWORD PTR _state$[ebp]
	movzx	ecx, BYTE PTR [edx+ecx]
	xor	eax, DWORD PTR _U3[ecx*4]
	mov	DWORD PTR _column2$[ebp], eax
; Line 1671
	mov	edx, 1
	imul	eax, edx, 12
	mov	ecx, DWORD PTR _state$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	mov	eax, 1
	imul	ecx, eax, 9
	mov	eax, DWORD PTR _state$[ebp]
	movzx	ecx, BYTE PTR [eax+ecx]
	mov	edx, DWORD PTR _U0[edx*4]
	xor	edx, DWORD PTR _U1[ecx*4]
	mov	eax, 1
	imul	ecx, eax, 6
	mov	eax, DWORD PTR _state$[ebp]
	movzx	ecx, BYTE PTR [eax+ecx]
	xor	edx, DWORD PTR _U2[ecx*4]
	mov	eax, 1
	imul	ecx, eax, 3
	mov	eax, DWORD PTR _state$[ebp]
	movzx	ecx, BYTE PTR [eax+ecx]
	xor	edx, DWORD PTR _U3[ecx*4]
	mov	DWORD PTR _column3$[ebp], edx
; Line 1673
	mov	edx, 4
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _round_key$[ebp]
	mov	edx, DWORD PTR _column0$[ebp]
	xor	edx, DWORD PTR [ecx+eax]
	mov	eax, 4
	imul	ecx, eax, 0
	mov	eax, DWORD PTR _state$[ebp]
	mov	DWORD PTR [eax+ecx], edx
; Line 1674
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR _round_key$[ebp]
	mov	eax, DWORD PTR _column1$[ebp]
	xor	eax, DWORD PTR [edx+ecx]
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [edx+ecx], eax
; Line 1675
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _round_key$[ebp]
	mov	edx, DWORD PTR _column2$[ebp]
	xor	edx, DWORD PTR [ecx+eax]
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [ecx+eax], edx
; Line 1676
	mov	edx, 4
	imul	eax, edx, 3
	mov	ecx, DWORD PTR _round_key$[ebp]
	mov	edx, DWORD PTR _column3$[ebp]
	xor	edx, DWORD PTR [ecx+eax]
	mov	eax, 4
	imul	ecx, eax, 3
	mov	eax, DWORD PTR _state$[ebp]
	mov	DWORD PTR [eax+ecx], edx
; Line 1678
	mov	esp, ebp
	pop	ebp
	ret	0
_aes_inv_round ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _aes_round
_TEXT	SEGMENT
_column3$ = -16						; size = 4
_column2$ = -12						; size = 4
_column1$ = -8						; size = 4
_column0$ = -4						; size = 4
_state$ = 8						; size = 4
_round_key$ = 12					; size = 4
_aes_round PROC						; COMDAT
; File d:\develop\webrtcbuilds-builder\out\src\third_party\libsrtp\srtp\crypto\cipher\aes.c
; Line 1628
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 1635
	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _state$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	mov	ecx, 1
	imul	edx, ecx, 5
	mov	ecx, DWORD PTR _state$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	mov	eax, DWORD PTR _T0[eax*4]
	xor	eax, DWORD PTR _T1[edx*4]
	mov	ecx, 1
	imul	edx, ecx, 10
	mov	ecx, DWORD PTR _state$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	xor	eax, DWORD PTR _T2[edx*4]
	mov	ecx, 1
	imul	edx, ecx, 15
	mov	ecx, DWORD PTR _state$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	xor	eax, DWORD PTR _T3[edx*4]
	mov	DWORD PTR _column0$[ebp], eax
; Line 1638
	mov	eax, 1
	shl	eax, 2
	mov	ecx, DWORD PTR _state$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	mov	eax, 1
	imul	ecx, eax, 9
	mov	eax, DWORD PTR _state$[ebp]
	movzx	ecx, BYTE PTR [eax+ecx]
	mov	edx, DWORD PTR _T0[edx*4]
	xor	edx, DWORD PTR _T1[ecx*4]
	mov	eax, 1
	imul	ecx, eax, 14
	mov	eax, DWORD PTR _state$[ebp]
	movzx	ecx, BYTE PTR [eax+ecx]
	xor	edx, DWORD PTR _T2[ecx*4]
	mov	eax, 1
	imul	ecx, eax, 3
	mov	eax, DWORD PTR _state$[ebp]
	movzx	ecx, BYTE PTR [eax+ecx]
	xor	edx, DWORD PTR _T3[ecx*4]
	mov	DWORD PTR _column1$[ebp], edx
; Line 1641
	mov	edx, 1
	shl	edx, 3
	mov	eax, DWORD PTR _state$[ebp]
	movzx	ecx, BYTE PTR [eax+edx]
	mov	edx, 1
	imul	eax, edx, 13
	mov	edx, DWORD PTR _state$[ebp]
	movzx	eax, BYTE PTR [edx+eax]
	mov	ecx, DWORD PTR _T0[ecx*4]
	xor	ecx, DWORD PTR _T1[eax*4]
	mov	edx, 1
	shl	edx, 1
	mov	eax, DWORD PTR _state$[ebp]
	movzx	edx, BYTE PTR [eax+edx]
	xor	ecx, DWORD PTR _T2[edx*4]
	mov	eax, 1
	imul	edx, eax, 7
	mov	eax, DWORD PTR _state$[ebp]
	movzx	edx, BYTE PTR [eax+edx]
	xor	ecx, DWORD PTR _T3[edx*4]
	mov	DWORD PTR _column2$[ebp], ecx
; Line 1644
	mov	eax, 1
	imul	ecx, eax, 12
	mov	edx, DWORD PTR _state$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	mov	ecx, 1
	shl	ecx, 0
	mov	edx, DWORD PTR _state$[ebp]
	movzx	ecx, BYTE PTR [edx+ecx]
	mov	edx, DWORD PTR _T0[eax*4]
	xor	edx, DWORD PTR _T1[ecx*4]
	mov	eax, 1
	imul	ecx, eax, 6
	mov	eax, DWORD PTR _state$[ebp]
	movzx	ecx, BYTE PTR [eax+ecx]
	xor	edx, DWORD PTR _T2[ecx*4]
	mov	eax, 1
	imul	ecx, eax, 11
	mov	eax, DWORD PTR _state$[ebp]
	movzx	ecx, BYTE PTR [eax+ecx]
	xor	edx, DWORD PTR _T3[ecx*4]
	mov	DWORD PTR _column3$[ebp], edx
; Line 1646
	mov	edx, 4
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _round_key$[ebp]
	mov	edx, DWORD PTR _column0$[ebp]
	xor	edx, DWORD PTR [ecx+eax]
	mov	eax, 4
	imul	ecx, eax, 0
	mov	eax, DWORD PTR _state$[ebp]
	mov	DWORD PTR [eax+ecx], edx
; Line 1647
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR _round_key$[ebp]
	mov	eax, DWORD PTR _column1$[ebp]
	xor	eax, DWORD PTR [edx+ecx]
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [edx+ecx], eax
; Line 1648
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _round_key$[ebp]
	mov	edx, DWORD PTR _column2$[ebp]
	xor	edx, DWORD PTR [ecx+eax]
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [ecx+eax], edx
; Line 1649
	mov	edx, 4
	imul	eax, edx, 3
	mov	ecx, DWORD PTR _round_key$[ebp]
	mov	edx, DWORD PTR _column3$[ebp]
	xor	edx, DWORD PTR [ecx+eax]
	mov	eax, 4
	imul	ecx, eax, 3
	mov	eax, DWORD PTR _state$[ebp]
	mov	DWORD PTR [eax+ecx], edx
; Line 1651
	mov	esp, ebp
	pop	ebp
	ret	0
_aes_round ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _aes_256_expand_encryption_key
_TEXT	SEGMENT
tv188 = -12						; size = 4
_rc$ = -5						; size = 1
_i$ = -4						; size = 4
_key$ = 8						; size = 4
_expanded_key$ = 12					; size = 4
_aes_256_expand_encryption_key PROC			; COMDAT
; File d:\develop\webrtcbuilds-builder\out\src\third_party\libsrtp\srtp\crypto\cipher\aes.c
; Line 1418
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1423
	mov	BYTE PTR _rc$[ebp], 1
; Line 1425
	mov	eax, DWORD PTR _expanded_key$[ebp]
	mov	DWORD PTR [eax+240], 14			; 0000000eH
; Line 1427
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, 16					; 00000010H
	imul	eax, edx, 0
	add	eax, DWORD PTR _expanded_key$[ebp]
	push	eax
	call	_v128_copy_octet_string
	add	esp, 8
; Line 1428
	mov	ecx, DWORD PTR _key$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	mov	edx, 16					; 00000010H
	shl	edx, 0
	add	edx, DWORD PTR _expanded_key$[ebp]
	push	edx
	call	_v128_copy_octet_string
	add	esp, 8
; Line 1438
	mov	DWORD PTR _i$[ebp], 2
	jmp	SHORT $LN5@aes_256_ex
$LN4@aes_256_ex:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN5@aes_256_ex:
	cmp	DWORD PTR _i$[ebp], 15			; 0000000fH
	jge	$LN6@aes_256_ex
; Line 1441
	mov	ecx, DWORD PTR _i$[ebp]
	and	ecx, 1
	jne	$LN2@aes_256_ex
; Line 1442
	mov	edx, DWORD PTR _i$[ebp]
	sub	edx, 1
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 1
	imul	ecx, eax, 13
	movzx	edx, BYTE PTR [edx+ecx]
	movzx	eax, BYTE PTR _aes_sbox[edx]
	movzx	ecx, BYTE PTR _rc$[ebp]
	xor	eax, ecx
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	ecx, 1
	imul	ecx, ecx, 0
	mov	BYTE PTR [edx+ecx], al
; Line 1443
	mov	edx, DWORD PTR _i$[ebp]
	sub	edx, 1
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 1
	imul	ecx, eax, 14
	movzx	edx, BYTE PTR [edx+ecx]
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, DWORD PTR _expanded_key$[ebp]
	mov	ecx, 1
	shl	ecx, 0
	mov	dl, BYTE PTR _aes_sbox[edx]
	mov	BYTE PTR [eax+ecx], dl
; Line 1444
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	shl	eax, 4
	add	eax, DWORD PTR _expanded_key$[ebp]
	mov	ecx, 1
	imul	edx, ecx, 15
	movzx	eax, BYTE PTR [eax+edx]
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	add	ecx, DWORD PTR _expanded_key$[ebp]
	mov	edx, 1
	shl	edx, 1
	mov	al, BYTE PTR _aes_sbox[eax]
	mov	BYTE PTR [ecx+edx], al
; Line 1445
	mov	ecx, DWORD PTR _i$[ebp]
	sub	ecx, 1
	shl	ecx, 4
	add	ecx, DWORD PTR _expanded_key$[ebp]
	mov	edx, 1
	imul	eax, edx, 12
	movzx	ecx, BYTE PTR [ecx+eax]
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 1
	imul	eax, eax, 3
	mov	cl, BYTE PTR _aes_sbox[ecx]
	mov	BYTE PTR [edx+eax], cl
; Line 1448
	movzx	edx, BYTE PTR _rc$[ebp]
	and	edx, 128				; 00000080H
	je	SHORT $LN8@aes_256_ex
	movzx	eax, BYTE PTR _rc$[ebp]
	shl	eax, 1
	xor	eax, 27					; 0000001bH
	mov	DWORD PTR tv188[ebp], eax
	jmp	SHORT $LN9@aes_256_ex
$LN8@aes_256_ex:
	movzx	ecx, BYTE PTR _rc$[ebp]
	shl	ecx, 1
	mov	DWORD PTR tv188[ebp], ecx
$LN9@aes_256_ex:
	mov	dl, BYTE PTR tv188[ebp]
	mov	BYTE PTR _rc$[ebp], dl
; Line 1450
	jmp	$LN1@aes_256_ex
$LN2@aes_256_ex:
; Line 1451
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	shl	eax, 4
	add	eax, DWORD PTR _expanded_key$[ebp]
	mov	ecx, 1
	imul	edx, ecx, 12
	movzx	eax, BYTE PTR [eax+edx]
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	add	ecx, DWORD PTR _expanded_key$[ebp]
	mov	edx, 1
	imul	edx, edx, 0
	mov	al, BYTE PTR _aes_sbox[eax]
	mov	BYTE PTR [ecx+edx], al
; Line 1452
	mov	ecx, DWORD PTR _i$[ebp]
	sub	ecx, 1
	shl	ecx, 4
	add	ecx, DWORD PTR _expanded_key$[ebp]
	mov	edx, 1
	imul	eax, edx, 13
	movzx	ecx, BYTE PTR [ecx+eax]
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 1
	shl	eax, 0
	mov	cl, BYTE PTR _aes_sbox[ecx]
	mov	BYTE PTR [edx+eax], cl
; Line 1453
	mov	edx, DWORD PTR _i$[ebp]
	sub	edx, 1
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 1
	imul	ecx, eax, 14
	movzx	edx, BYTE PTR [edx+ecx]
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, DWORD PTR _expanded_key$[ebp]
	mov	ecx, 1
	shl	ecx, 1
	mov	dl, BYTE PTR _aes_sbox[edx]
	mov	BYTE PTR [eax+ecx], dl
; Line 1454
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	shl	eax, 4
	add	eax, DWORD PTR _expanded_key$[ebp]
	mov	ecx, 1
	imul	edx, ecx, 15
	movzx	eax, BYTE PTR [eax+edx]
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	add	ecx, DWORD PTR _expanded_key$[ebp]
	mov	edx, 1
	imul	edx, edx, 3
	mov	al, BYTE PTR _aes_sbox[eax]
	mov	BYTE PTR [ecx+edx], al
$LN1@aes_256_ex:
; Line 1457
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	add	ecx, DWORD PTR _expanded_key$[ebp]
	mov	edx, 4
	imul	eax, edx, 0
	mov	edx, DWORD PTR _i$[ebp]
	sub	edx, 2
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	esi, 4
	imul	esi, esi, 0
	mov	eax, DWORD PTR [ecx+eax]
	xor	eax, DWORD PTR [edx+esi]
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	add	ecx, DWORD PTR _expanded_key$[ebp]
	mov	DWORD PTR [ecx+edx], eax
; Line 1463
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 4
	imul	ecx, eax, 0
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 2
	shl	eax, 4
	add	eax, DWORD PTR _expanded_key$[ebp]
	mov	esi, 4
	shl	esi, 0
	mov	ecx, DWORD PTR [edx+ecx]
	xor	ecx, DWORD PTR [eax+esi]
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR [edx+eax], ecx
; Line 1466
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	add	ecx, DWORD PTR _expanded_key$[ebp]
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 2
	shl	eax, 4
	add	eax, DWORD PTR _expanded_key$[ebp]
	mov	esi, 4
	shl	esi, 1
	mov	ecx, DWORD PTR [ecx+edx]
	xor	ecx, DWORD PTR [eax+esi]
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR [edx+eax], ecx
; Line 1469
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	add	ecx, DWORD PTR _expanded_key$[ebp]
	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 2
	shl	eax, 4
	add	eax, DWORD PTR _expanded_key$[ebp]
	mov	esi, 4
	imul	esi, esi, 3
	mov	ecx, DWORD PTR [ecx+edx]
	xor	ecx, DWORD PTR [eax+esi]
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 4
	imul	eax, eax, 3
	mov	DWORD PTR [edx+eax], ecx
; Line 1476
	jmp	$LN4@aes_256_ex
$LN6@aes_256_ex:
; Line 1477
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_aes_256_expand_encryption_key ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _aes_128_expand_encryption_key
_TEXT	SEGMENT
tv260 = -12						; size = 4
_rc$ = -5						; size = 1
_i$ = -4						; size = 4
_key$ = 8						; size = 4
_expanded_key$ = 12					; size = 4
_aes_128_expand_encryption_key PROC			; COMDAT
; File d:\develop\webrtcbuilds-builder\out\src\third_party\libsrtp\srtp\crypto\cipher\aes.c
; Line 1366
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1371
	mov	BYTE PTR _rc$[ebp], 1
; Line 1373
	mov	eax, DWORD PTR _expanded_key$[ebp]
	mov	DWORD PTR [eax+240], 10			; 0000000aH
; Line 1375
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, 16					; 00000010H
	imul	eax, edx, 0
	add	eax, DWORD PTR _expanded_key$[ebp]
	push	eax
	call	_v128_copy_octet_string
	add	esp, 8
; Line 1383
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN3@aes_128_ex
$LN2@aes_128_ex:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN3@aes_128_ex:
	cmp	DWORD PTR _i$[ebp], 11			; 0000000bH
	jge	$LN4@aes_128_ex
; Line 1386
	mov	edx, DWORD PTR _i$[ebp]
	sub	edx, 1
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 1
	imul	ecx, eax, 13
	movzx	edx, BYTE PTR [edx+ecx]
	movzx	eax, BYTE PTR _aes_sbox[edx]
	movzx	ecx, BYTE PTR _rc$[ebp]
	xor	eax, ecx
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	ecx, 1
	imul	ecx, ecx, 0
	mov	BYTE PTR [edx+ecx], al
; Line 1387
	mov	edx, DWORD PTR _i$[ebp]
	sub	edx, 1
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 1
	imul	ecx, eax, 14
	movzx	edx, BYTE PTR [edx+ecx]
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, DWORD PTR _expanded_key$[ebp]
	mov	ecx, 1
	shl	ecx, 0
	mov	dl, BYTE PTR _aes_sbox[edx]
	mov	BYTE PTR [eax+ecx], dl
; Line 1388
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	shl	eax, 4
	add	eax, DWORD PTR _expanded_key$[ebp]
	mov	ecx, 1
	imul	edx, ecx, 15
	movzx	eax, BYTE PTR [eax+edx]
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	add	ecx, DWORD PTR _expanded_key$[ebp]
	mov	edx, 1
	shl	edx, 1
	mov	al, BYTE PTR _aes_sbox[eax]
	mov	BYTE PTR [ecx+edx], al
; Line 1389
	mov	ecx, DWORD PTR _i$[ebp]
	sub	ecx, 1
	shl	ecx, 4
	add	ecx, DWORD PTR _expanded_key$[ebp]
	mov	edx, 1
	imul	eax, edx, 12
	movzx	ecx, BYTE PTR [ecx+eax]
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 1
	imul	eax, eax, 3
	mov	cl, BYTE PTR _aes_sbox[ecx]
	mov	BYTE PTR [edx+eax], cl
; Line 1391
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 4
	imul	ecx, eax, 0
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	shl	eax, 4
	add	eax, DWORD PTR _expanded_key$[ebp]
	mov	esi, 4
	imul	esi, esi, 0
	mov	ecx, DWORD PTR [edx+ecx]
	xor	ecx, DWORD PTR [eax+esi]
	mov	edx, 4
	imul	eax, edx, 0
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	DWORD PTR [edx+eax], ecx
; Line 1397
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, DWORD PTR _expanded_key$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	ecx, DWORD PTR _i$[ebp]
	sub	ecx, 1
	shl	ecx, 4
	add	ecx, DWORD PTR _expanded_key$[ebp]
	mov	esi, 4
	shl	esi, 0
	mov	edx, DWORD PTR [eax+edx]
	xor	edx, DWORD PTR [ecx+esi]
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, DWORD PTR _expanded_key$[ebp]
	mov	ecx, 4
	shl	ecx, 0
	mov	DWORD PTR [eax+ecx], edx
; Line 1400
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _i$[ebp]
	sub	ecx, 1
	shl	ecx, 4
	add	ecx, DWORD PTR _expanded_key$[ebp]
	mov	esi, 4
	shl	esi, 1
	mov	edx, DWORD PTR [edx+eax]
	xor	edx, DWORD PTR [ecx+esi]
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, DWORD PTR _expanded_key$[ebp]
	mov	ecx, 4
	shl	ecx, 1
	mov	DWORD PTR [eax+ecx], edx
; Line 1403
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	sub	ecx, 1
	shl	ecx, 4
	add	ecx, DWORD PTR _expanded_key$[ebp]
	mov	esi, 4
	imul	esi, esi, 3
	mov	edx, DWORD PTR [edx+eax]
	xor	edx, DWORD PTR [ecx+esi]
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, DWORD PTR _expanded_key$[ebp]
	mov	ecx, 4
	imul	ecx, ecx, 3
	mov	DWORD PTR [eax+ecx], edx
; Line 1411
	movzx	edx, BYTE PTR _rc$[ebp]
	and	edx, 128				; 00000080H
	je	SHORT $LN6@aes_128_ex
	movzx	eax, BYTE PTR _rc$[ebp]
	shl	eax, 1
	xor	eax, 27					; 0000001bH
	mov	DWORD PTR tv260[ebp], eax
	jmp	SHORT $LN7@aes_128_ex
$LN6@aes_128_ex:
	movzx	ecx, BYTE PTR _rc$[ebp]
	shl	ecx, 1
	mov	DWORD PTR tv260[ebp], ecx
$LN7@aes_128_ex:
	mov	dl, BYTE PTR tv260[ebp]
	mov	BYTE PTR _rc$[ebp], dl
; Line 1413
	jmp	$LN2@aes_128_ex
$LN4@aes_128_ex:
; Line 1414
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_aes_128_expand_encryption_key ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _aes_decrypt
_TEXT	SEGMENT
_plaintext$ = 8						; size = 4
_exp_key$ = 12						; size = 4
_aes_decrypt PROC					; COMDAT
; File d:\develop\webrtcbuilds-builder\out\src\third_party\libsrtp\srtp\crypto\cipher\aes.c
; Line 2120
	push	ebp
	mov	ebp, esp
	push	esi
	push	edi
; Line 2123
	mov	eax, 8
	imul	ecx, eax, 0
	mov	edx, 16					; 00000010H
	imul	eax, edx, 0
	add	eax, DWORD PTR _exp_key$[ebp]
	mov	edx, 8
	imul	edx, edx, 0
	mov	esi, DWORD PTR _plaintext$[ebp]
	mov	edi, DWORD PTR [esi+ecx]
	xor	edi, DWORD PTR [eax+edx]
	mov	ecx, DWORD PTR [esi+ecx+4]
	xor	ecx, DWORD PTR [eax+edx+4]
	mov	edx, 8
	imul	eax, edx, 0
	mov	edx, DWORD PTR _plaintext$[ebp]
	mov	DWORD PTR [edx+eax], edi
	mov	DWORD PTR [edx+eax+4], ecx
	mov	eax, 8
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 0
	add	edx, DWORD PTR _exp_key$[ebp]
	mov	ecx, 8
	shl	ecx, 0
	mov	esi, DWORD PTR _plaintext$[ebp]
	mov	edi, DWORD PTR [esi+eax]
	xor	edi, DWORD PTR [edx+ecx]
	mov	eax, DWORD PTR [esi+eax+4]
	xor	eax, DWORD PTR [edx+ecx+4]
	mov	ecx, 8
	shl	ecx, 0
	mov	edx, DWORD PTR _plaintext$[ebp]
	mov	DWORD PTR [edx+ecx], edi
	mov	DWORD PTR [edx+ecx+4], eax
; Line 2126
	mov	eax, 16					; 00000010H
	shl	eax, 0
	add	eax, DWORD PTR _exp_key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _plaintext$[ebp]
	push	ecx
	call	_aes_inv_round
	add	esp, 8
; Line 2127
	mov	edx, 16					; 00000010H
	shl	edx, 1
	add	edx, DWORD PTR _exp_key$[ebp]
	push	edx
	mov	eax, DWORD PTR _plaintext$[ebp]
	push	eax
	call	_aes_inv_round
	add	esp, 8
; Line 2128
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 3
	add	edx, DWORD PTR _exp_key$[ebp]
	push	edx
	mov	eax, DWORD PTR _plaintext$[ebp]
	push	eax
	call	_aes_inv_round
	add	esp, 8
; Line 2129
	mov	ecx, 16					; 00000010H
	shl	ecx, 2
	add	ecx, DWORD PTR _exp_key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _plaintext$[ebp]
	push	edx
	call	_aes_inv_round
	add	esp, 8
; Line 2130
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 5
	add	ecx, DWORD PTR _exp_key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _plaintext$[ebp]
	push	edx
	call	_aes_inv_round
	add	esp, 8
; Line 2131
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 6
	add	ecx, DWORD PTR _exp_key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _plaintext$[ebp]
	push	edx
	call	_aes_inv_round
	add	esp, 8
; Line 2132
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 7
	add	ecx, DWORD PTR _exp_key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _plaintext$[ebp]
	push	edx
	call	_aes_inv_round
	add	esp, 8
; Line 2133
	mov	eax, 16					; 00000010H
	shl	eax, 3
	add	eax, DWORD PTR _exp_key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _plaintext$[ebp]
	push	ecx
	call	_aes_inv_round
	add	esp, 8
; Line 2134
	mov	edx, 16					; 00000010H
	imul	eax, edx, 9
	add	eax, DWORD PTR _exp_key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _plaintext$[ebp]
	push	ecx
	call	_aes_inv_round
	add	esp, 8
; Line 2135
	mov	edx, DWORD PTR _exp_key$[ebp]
	cmp	DWORD PTR [edx+240], 10			; 0000000aH
	jne	SHORT $LN5@aes_decryp
; Line 2136
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 10
	add	ecx, DWORD PTR _exp_key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _plaintext$[ebp]
	push	edx
	call	_aes_inv_final_round
	add	esp, 8
	jmp	$LN6@aes_decryp
$LN5@aes_decryp:
; Line 2138
	mov	eax, DWORD PTR _exp_key$[ebp]
	cmp	DWORD PTR [eax+240], 12			; 0000000cH
	jne	SHORT $LN3@aes_decryp
; Line 2139
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 10
	add	edx, DWORD PTR _exp_key$[ebp]
	push	edx
	mov	eax, DWORD PTR _plaintext$[ebp]
	push	eax
	call	_aes_inv_round
	add	esp, 8
; Line 2140
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 11
	add	edx, DWORD PTR _exp_key$[ebp]
	push	edx
	mov	eax, DWORD PTR _plaintext$[ebp]
	push	eax
	call	_aes_inv_round
	add	esp, 8
; Line 2141
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 12
	add	edx, DWORD PTR _exp_key$[ebp]
	push	edx
	mov	eax, DWORD PTR _plaintext$[ebp]
	push	eax
	call	_aes_inv_final_round
	add	esp, 8
	jmp	$LN6@aes_decryp
$LN3@aes_decryp:
; Line 2143
	mov	ecx, DWORD PTR _exp_key$[ebp]
	cmp	DWORD PTR [ecx+240], 14			; 0000000eH
	jne	SHORT $LN6@aes_decryp
; Line 2144
	mov	edx, 16					; 00000010H
	imul	eax, edx, 10
	add	eax, DWORD PTR _exp_key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _plaintext$[ebp]
	push	ecx
	call	_aes_inv_round
	add	esp, 8
; Line 2145
	mov	edx, 16					; 00000010H
	imul	eax, edx, 11
	add	eax, DWORD PTR _exp_key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _plaintext$[ebp]
	push	ecx
	call	_aes_inv_round
	add	esp, 8
; Line 2146
	mov	edx, 16					; 00000010H
	imul	eax, edx, 12
	add	eax, DWORD PTR _exp_key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _plaintext$[ebp]
	push	ecx
	call	_aes_inv_round
	add	esp, 8
; Line 2147
	mov	edx, 16					; 00000010H
	imul	eax, edx, 13
	add	eax, DWORD PTR _exp_key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _plaintext$[ebp]
	push	ecx
	call	_aes_inv_round
	add	esp, 8
; Line 2148
	mov	edx, 16					; 00000010H
	imul	eax, edx, 14
	add	eax, DWORD PTR _exp_key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _plaintext$[ebp]
	push	ecx
	call	_aes_inv_final_round
	add	esp, 8
$LN6@aes_decryp:
; Line 2150
	pop	edi
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_aes_decrypt ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _aes_encrypt
_TEXT	SEGMENT
_plaintext$ = 8						; size = 4
_exp_key$ = 12						; size = 4
_aes_encrypt PROC					; COMDAT
; File d:\develop\webrtcbuilds-builder\out\src\third_party\libsrtp\srtp\crypto\cipher\aes.c
; Line 2087
	push	ebp
	mov	ebp, esp
	push	esi
	push	edi
; Line 2090
	mov	eax, 8
	imul	ecx, eax, 0
	mov	edx, 16					; 00000010H
	imul	eax, edx, 0
	add	eax, DWORD PTR _exp_key$[ebp]
	mov	edx, 8
	imul	edx, edx, 0
	mov	esi, DWORD PTR _plaintext$[ebp]
	mov	edi, DWORD PTR [esi+ecx]
	xor	edi, DWORD PTR [eax+edx]
	mov	ecx, DWORD PTR [esi+ecx+4]
	xor	ecx, DWORD PTR [eax+edx+4]
	mov	edx, 8
	imul	eax, edx, 0
	mov	edx, DWORD PTR _plaintext$[ebp]
	mov	DWORD PTR [edx+eax], edi
	mov	DWORD PTR [edx+eax+4], ecx
	mov	eax, 8
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 0
	add	edx, DWORD PTR _exp_key$[ebp]
	mov	ecx, 8
	shl	ecx, 0
	mov	esi, DWORD PTR _plaintext$[ebp]
	mov	edi, DWORD PTR [esi+eax]
	xor	edi, DWORD PTR [edx+ecx]
	mov	eax, DWORD PTR [esi+eax+4]
	xor	eax, DWORD PTR [edx+ecx+4]
	mov	ecx, 8
	shl	ecx, 0
	mov	edx, DWORD PTR _plaintext$[ebp]
	mov	DWORD PTR [edx+ecx], edi
	mov	DWORD PTR [edx+ecx+4], eax
; Line 2093
	mov	eax, 16					; 00000010H
	shl	eax, 0
	add	eax, DWORD PTR _exp_key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _plaintext$[ebp]
	push	ecx
	call	_aes_round
	add	esp, 8
; Line 2094
	mov	edx, 16					; 00000010H
	shl	edx, 1
	add	edx, DWORD PTR _exp_key$[ebp]
	push	edx
	mov	eax, DWORD PTR _plaintext$[ebp]
	push	eax
	call	_aes_round
	add	esp, 8
; Line 2095
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 3
	add	edx, DWORD PTR _exp_key$[ebp]
	push	edx
	mov	eax, DWORD PTR _plaintext$[ebp]
	push	eax
	call	_aes_round
	add	esp, 8
; Line 2096
	mov	ecx, 16					; 00000010H
	shl	ecx, 2
	add	ecx, DWORD PTR _exp_key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _plaintext$[ebp]
	push	edx
	call	_aes_round
	add	esp, 8
; Line 2097
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 5
	add	ecx, DWORD PTR _exp_key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _plaintext$[ebp]
	push	edx
	call	_aes_round
	add	esp, 8
; Line 2098
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 6
	add	ecx, DWORD PTR _exp_key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _plaintext$[ebp]
	push	edx
	call	_aes_round
	add	esp, 8
; Line 2099
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 7
	add	ecx, DWORD PTR _exp_key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _plaintext$[ebp]
	push	edx
	call	_aes_round
	add	esp, 8
; Line 2100
	mov	eax, 16					; 00000010H
	shl	eax, 3
	add	eax, DWORD PTR _exp_key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _plaintext$[ebp]
	push	ecx
	call	_aes_round
	add	esp, 8
; Line 2101
	mov	edx, 16					; 00000010H
	imul	eax, edx, 9
	add	eax, DWORD PTR _exp_key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _plaintext$[ebp]
	push	ecx
	call	_aes_round
	add	esp, 8
; Line 2102
	mov	edx, DWORD PTR _exp_key$[ebp]
	cmp	DWORD PTR [edx+240], 10			; 0000000aH
	jne	SHORT $LN5@aes_encryp
; Line 2103
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 10
	add	ecx, DWORD PTR _exp_key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _plaintext$[ebp]
	push	edx
	call	_aes_final_round
	add	esp, 8
	jmp	$LN6@aes_encryp
$LN5@aes_encryp:
; Line 2105
	mov	eax, DWORD PTR _exp_key$[ebp]
	cmp	DWORD PTR [eax+240], 12			; 0000000cH
	jne	SHORT $LN3@aes_encryp
; Line 2106
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 10
	add	edx, DWORD PTR _exp_key$[ebp]
	push	edx
	mov	eax, DWORD PTR _plaintext$[ebp]
	push	eax
	call	_aes_round
	add	esp, 8
; Line 2107
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 11
	add	edx, DWORD PTR _exp_key$[ebp]
	push	edx
	mov	eax, DWORD PTR _plaintext$[ebp]
	push	eax
	call	_aes_round
	add	esp, 8
; Line 2108
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 12
	add	edx, DWORD PTR _exp_key$[ebp]
	push	edx
	mov	eax, DWORD PTR _plaintext$[ebp]
	push	eax
	call	_aes_final_round
	add	esp, 8
	jmp	$LN6@aes_encryp
$LN3@aes_encryp:
; Line 2110
	mov	ecx, DWORD PTR _exp_key$[ebp]
	cmp	DWORD PTR [ecx+240], 14			; 0000000eH
	jne	SHORT $LN6@aes_encryp
; Line 2111
	mov	edx, 16					; 00000010H
	imul	eax, edx, 10
	add	eax, DWORD PTR _exp_key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _plaintext$[ebp]
	push	ecx
	call	_aes_round
	add	esp, 8
; Line 2112
	mov	edx, 16					; 00000010H
	imul	eax, edx, 11
	add	eax, DWORD PTR _exp_key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _plaintext$[ebp]
	push	ecx
	call	_aes_round
	add	esp, 8
; Line 2113
	mov	edx, 16					; 00000010H
	imul	eax, edx, 12
	add	eax, DWORD PTR _exp_key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _plaintext$[ebp]
	push	ecx
	call	_aes_round
	add	esp, 8
; Line 2114
	mov	edx, 16					; 00000010H
	imul	eax, edx, 13
	add	eax, DWORD PTR _exp_key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _plaintext$[ebp]
	push	ecx
	call	_aes_round
	add	esp, 8
; Line 2115
	mov	edx, 16					; 00000010H
	imul	eax, edx, 14
	add	eax, DWORD PTR _exp_key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _plaintext$[ebp]
	push	ecx
	call	_aes_final_round
	add	esp, 8
$LN6@aes_encryp:
; Line 2117
	pop	edi
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_aes_encrypt ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _aes_expand_decryption_key
_TEXT	SEGMENT
_c3$1 = -56						; size = 4
_c2$2 = -52						; size = 4
_c1$3 = -48						; size = 4
_c0$4 = -44						; size = 4
_tmp$5 = -36						; size = 16
_num_rounds$ = -16					; size = 4
_status$ = -12						; size = 4
_i$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_key$ = 8						; size = 4
_key_len$ = 12						; size = 4
_expanded_key$ = 16					; size = 4
_aes_expand_decryption_key PROC				; COMDAT
; File d:\develop\webrtcbuilds-builder\out\src\third_party\libsrtp\srtp\crypto\cipher\aes.c
; Line 1502
	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 14					; 0000000eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1505
	mov	eax, DWORD PTR _expanded_key$[ebp]
	mov	ecx, DWORD PTR [eax+240]
	mov	DWORD PTR _num_rounds$[ebp], ecx
; Line 1507
	mov	edx, DWORD PTR _expanded_key$[ebp]
	push	edx
	mov	eax, DWORD PTR _key_len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	call	_aes_expand_encryption_key
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _status$[ebp], eax
; Line 1508
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN7@aes_expand
; Line 1509
	mov	eax, DWORD PTR _status$[ebp]
	jmp	$LN8@aes_expand
$LN7@aes_expand:
; Line 1512
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@aes_expand
$LN5@aes_expand:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN6@aes_expand:
	mov	eax, DWORD PTR _num_rounds$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	cmp	DWORD PTR _i$[ebp], eax
	jge	$LN4@aes_expand
; Line 1514
	mov	eax, DWORD PTR _num_rounds$[ebp]
	sub	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, DWORD PTR _expanded_key$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	ecx, 4
	imul	ecx, ecx, 0
	mov	edx, DWORD PTR [eax+edx]
	mov	DWORD PTR _tmp$5[ebp+ecx], edx
	mov	eax, DWORD PTR _num_rounds$[ebp]
	sub	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, DWORD PTR _expanded_key$[ebp]
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR [eax+ecx]
	mov	DWORD PTR _tmp$5[ebp+edx], eax
	mov	ecx, DWORD PTR _num_rounds$[ebp]
	sub	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	add	ecx, DWORD PTR _expanded_key$[ebp]
	mov	edx, 4
	shl	edx, 1
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR [ecx+edx]
	mov	DWORD PTR _tmp$5[ebp+eax], ecx
	mov	edx, DWORD PTR _num_rounds$[ebp]
	sub	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 4
	imul	ecx, eax, 3
	mov	eax, 4
	imul	eax, eax, 3
	mov	ecx, DWORD PTR [edx+ecx]
	mov	DWORD PTR _tmp$5[ebp+eax], ecx
; Line 1515
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 4
	imul	ecx, eax, 0
	mov	eax, DWORD PTR _num_rounds$[ebp]
	sub	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, DWORD PTR _expanded_key$[ebp]
	mov	esi, 4
	imul	esi, esi, 0
	mov	ecx, DWORD PTR [edx+ecx]
	mov	DWORD PTR [eax+esi], ecx
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _num_rounds$[ebp]
	sub	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	add	ecx, DWORD PTR _expanded_key$[ebp]
	mov	esi, 4
	shl	esi, 0
	mov	edx, DWORD PTR [edx+eax]
	mov	DWORD PTR [ecx+esi], edx
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, DWORD PTR _expanded_key$[ebp]
	mov	ecx, 4
	shl	ecx, 1
	mov	edx, DWORD PTR _num_rounds$[ebp]
	sub	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	esi, 4
	shl	esi, 1
	mov	eax, DWORD PTR [eax+ecx]
	mov	DWORD PTR [edx+esi], eax
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	add	ecx, DWORD PTR _expanded_key$[ebp]
	mov	edx, 4
	imul	eax, edx, 3
	mov	edx, DWORD PTR _num_rounds$[ebp]
	sub	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	esi, 4
	imul	esi, esi, 3
	mov	eax, DWORD PTR [ecx+eax]
	mov	DWORD PTR [edx+esi], eax
; Line 1516
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, DWORD PTR _expanded_key$[ebp]
	mov	ecx, 4
	imul	ecx, ecx, 0
	mov	edx, DWORD PTR _tmp$5[ebp+edx]
	mov	DWORD PTR [eax+ecx], edx
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	add	ecx, DWORD PTR _expanded_key$[ebp]
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _tmp$5[ebp+eax]
	mov	DWORD PTR [ecx+edx], eax
	mov	ecx, 4
	shl	ecx, 1
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _tmp$5[ebp+ecx]
	mov	DWORD PTR [edx+eax], ecx
	mov	edx, 4
	imul	eax, edx, 3
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	add	ecx, DWORD PTR _expanded_key$[ebp]
	mov	edx, 4
	imul	edx, edx, 3
	mov	eax, DWORD PTR _tmp$5[ebp+eax]
	mov	DWORD PTR [ecx+edx], eax
; Line 1517
	jmp	$LN5@aes_expand
$LN4@aes_expand:
; Line 1527
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN3@aes_expand
$LN2@aes_expand:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN3@aes_expand:
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR _num_rounds$[ebp]
	jge	$LN1@aes_expand
; Line 1596
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, DWORD PTR _expanded_key$[ebp]
	mov	ecx, 1
	imul	edx, ecx, 0
	movzx	eax, BYTE PTR [eax+edx]
	movzx	ecx, BYTE PTR _aes_sbox[eax]
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 1
	shl	eax, 0
	movzx	edx, BYTE PTR [edx+eax]
	movzx	eax, BYTE PTR _aes_sbox[edx]
	mov	ecx, DWORD PTR _U0[ecx*4]
	xor	ecx, DWORD PTR _U1[eax*4]
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 1
	shl	eax, 1
	movzx	edx, BYTE PTR [edx+eax]
	movzx	eax, BYTE PTR _aes_sbox[edx]
	xor	ecx, DWORD PTR _U2[eax*4]
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 1
	imul	eax, eax, 3
	movzx	edx, BYTE PTR [edx+eax]
	movzx	eax, BYTE PTR _aes_sbox[edx]
	xor	ecx, DWORD PTR _U3[eax*4]
	mov	DWORD PTR _c0$4[ebp], ecx
; Line 1601
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	add	ecx, DWORD PTR _expanded_key$[ebp]
	mov	edx, 1
	shl	edx, 2
	movzx	eax, BYTE PTR [ecx+edx]
	movzx	ecx, BYTE PTR _aes_sbox[eax]
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 1
	imul	eax, eax, 5
	movzx	edx, BYTE PTR [edx+eax]
	movzx	eax, BYTE PTR _aes_sbox[edx]
	mov	ecx, DWORD PTR _U0[ecx*4]
	xor	ecx, DWORD PTR _U1[eax*4]
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 1
	imul	eax, eax, 6
	movzx	edx, BYTE PTR [edx+eax]
	movzx	eax, BYTE PTR _aes_sbox[edx]
	xor	ecx, DWORD PTR _U2[eax*4]
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 1
	imul	eax, eax, 7
	movzx	edx, BYTE PTR [edx+eax]
	movzx	eax, BYTE PTR _aes_sbox[edx]
	xor	ecx, DWORD PTR _U3[eax*4]
	mov	DWORD PTR _c1$3[ebp], ecx
; Line 1606
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	add	ecx, DWORD PTR _expanded_key$[ebp]
	mov	edx, 1
	shl	edx, 3
	movzx	eax, BYTE PTR [ecx+edx]
	movzx	ecx, BYTE PTR _aes_sbox[eax]
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 1
	imul	eax, eax, 9
	movzx	edx, BYTE PTR [edx+eax]
	movzx	eax, BYTE PTR _aes_sbox[edx]
	mov	ecx, DWORD PTR _U0[ecx*4]
	xor	ecx, DWORD PTR _U1[eax*4]
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 1
	imul	eax, eax, 10
	movzx	edx, BYTE PTR [edx+eax]
	movzx	eax, BYTE PTR _aes_sbox[edx]
	xor	ecx, DWORD PTR _U2[eax*4]
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 1
	imul	eax, eax, 11
	movzx	edx, BYTE PTR [edx+eax]
	movzx	eax, BYTE PTR _aes_sbox[edx]
	xor	ecx, DWORD PTR _U3[eax*4]
	mov	DWORD PTR _c2$2[ebp], ecx
; Line 1611
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	add	ecx, DWORD PTR _expanded_key$[ebp]
	mov	edx, 1
	imul	eax, edx, 12
	movzx	ecx, BYTE PTR [ecx+eax]
	movzx	edx, BYTE PTR _aes_sbox[ecx]
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, DWORD PTR _expanded_key$[ebp]
	mov	ecx, 1
	imul	ecx, ecx, 13
	movzx	eax, BYTE PTR [eax+ecx]
	movzx	ecx, BYTE PTR _aes_sbox[eax]
	mov	edx, DWORD PTR _U0[edx*4]
	xor	edx, DWORD PTR _U1[ecx*4]
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, DWORD PTR _expanded_key$[ebp]
	mov	ecx, 1
	imul	ecx, ecx, 14
	movzx	eax, BYTE PTR [eax+ecx]
	movzx	ecx, BYTE PTR _aes_sbox[eax]
	xor	edx, DWORD PTR _U2[ecx*4]
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, DWORD PTR _expanded_key$[ebp]
	mov	ecx, 1
	imul	ecx, ecx, 15
	movzx	eax, BYTE PTR [eax+ecx]
	movzx	ecx, BYTE PTR _aes_sbox[eax]
	xor	edx, DWORD PTR _U3[ecx*4]
	mov	DWORD PTR _c3$1[ebp], edx
; Line 1613
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _expanded_key$[ebp]
	mov	eax, 4
	imul	ecx, eax, 0
	mov	eax, DWORD PTR _c0$4[ebp]
	mov	DWORD PTR [edx+ecx], eax
; Line 1614
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	add	ecx, DWORD PTR _expanded_key$[ebp]
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _c1$3[ebp]
	mov	DWORD PTR [ecx+edx], eax
; Line 1615
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	add	ecx, DWORD PTR _expanded_key$[ebp]
	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR _c2$2[ebp]
	mov	DWORD PTR [ecx+edx], eax
; Line 1616
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	add	ecx, DWORD PTR _expanded_key$[ebp]
	mov	edx, 4
	imul	eax, edx, 3
	mov	edx, DWORD PTR _c3$1[ebp]
	mov	DWORD PTR [ecx+eax], edx
; Line 1619
	jmp	$LN2@aes_expand
$LN1@aes_expand:
; Line 1621
	xor	eax, eax
$LN8@aes_expand:
; Line 1622
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@aes_expand
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN12@aes_expand:
	DD	1
	DD	$LN11@aes_expand
$LN11@aes_expand:
	DD	-36					; ffffffdcH
	DD	16					; 00000010H
	DD	$LN10@aes_expand
$LN10@aes_expand:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_aes_expand_decryption_key ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _aes_expand_encryption_key
_TEXT	SEGMENT
_key$ = 8						; size = 4
_key_len$ = 12						; size = 4
_expanded_key$ = 16					; size = 4
_aes_expand_encryption_key PROC				; COMDAT
; File d:\develop\webrtcbuilds-builder\out\src\third_party\libsrtp\srtp\crypto\cipher\aes.c
; Line 1482
	push	ebp
	mov	ebp, esp
; Line 1483
	cmp	DWORD PTR _key_len$[ebp], 16		; 00000010H
	jne	SHORT $LN6@aes_expand
; Line 1484
	mov	eax, DWORD PTR _expanded_key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	call	_aes_128_expand_encryption_key
	add	esp, 8
; Line 1485
	xor	eax, eax
	jmp	SHORT $LN7@aes_expand
	jmp	SHORT $LN7@aes_expand
$LN6@aes_expand:
; Line 1487
	cmp	DWORD PTR _key_len$[ebp], 24		; 00000018H
	jne	SHORT $LN4@aes_expand
; Line 1489
	mov	eax, 2
	jmp	SHORT $LN7@aes_expand
	jmp	SHORT $LN7@aes_expand
$LN4@aes_expand:
; Line 1491
	cmp	DWORD PTR _key_len$[ebp], 32		; 00000020H
	jne	SHORT $LN2@aes_expand
; Line 1492
	mov	edx, DWORD PTR _expanded_key$[ebp]
	push	edx
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	call	_aes_256_expand_encryption_key
	add	esp, 8
; Line 1493
	xor	eax, eax
	jmp	SHORT $LN7@aes_expand
; Line 1495
	jmp	SHORT $LN7@aes_expand
$LN2@aes_expand:
; Line 1496
	mov	eax, 2
$LN7@aes_expand:
; Line 1497
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_aes_expand_encryption_key ENDP
_TEXT	ENDS
END
